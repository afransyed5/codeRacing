package com.lam.coder.projectEuler;

/**
 * 
 * @author Ludoviko Azuaje
 * 
 *         Problem 44: Pentagon numbers
 * 
 *         Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The
 *         first ten pentagonal numbers are:
 * 
 *         1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * 
 *         It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their
 *         difference, 70 − 22 = 48, is not pentagonal.
 * 
 *         Find the pair of pentagonal numbers, Pj and Pk, for which their sum
 *         and difference are pentagonal and D = |Pk − Pj| is minimised; what is
 *         the value of D?
 * 
 *         Answer: 5482660.
 * 
 */

public class PentagonNumbers {
	public static long find() {
		long sum;
		long delta;
		long min = 100000000;
		
		String string = null;

		for (int i = 1; i < 5000; i++) {
			for (int j = i + 1; j < 5000 + 1; j++) {
				sum = findPentagonal(i) + findPentagonal(j);
				delta = findPentagonal(j) - findPentagonal(i);
				if (isPentagonal(sum)) {
					if (isPentagonal(delta)) {
						if (delta < min) {
							min = delta;
							string = findPentagonal(i) + "/"
									+ findPentagonal(j) + ", delta = " + min;
//							System.out.println(string);
						}
					}
				} else {
				}
			}
		}
		return min;
	}

	private static long findPentagonal(long n) {
		return n * (3 * n - 1) / 2;
	}

	private static boolean isPentagonal(long n) {
		double penta;
		double pentaInt;

		penta = (1 + Math.sqrt(1 + 24 * n)) / 6;
		pentaInt = Math.floor(penta);

		return (penta == pentaInt);
	}

	public static void main(String[] args) {
		System.out.println(PentagonNumbers.find());
	}
}
