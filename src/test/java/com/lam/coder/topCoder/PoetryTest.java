package com.lam.coder.topCoder;

import org.junit.After;
import org.junit.Before;
import org.junit.Ignore;
import org.junit.Test;

import com.lam.coder.topCoder.Poetry;

import junit.framework.Assert;
import junit.framework.TestCase;
@Ignore
public class PoetryTest extends TestCase {

	private Poetry poetry;

	@Before
	protected void setUp() throws Exception {
		super.setUp();
		poetry = new Poetry();
	}

	@After
	protected void tearDown() throws Exception {
		super.tearDown();
		poetry = null;
	}

	@Test
	public void testPoetrySimple() {
		Assert.assertEquals(
				"abc",
				poetry.rhymeScheme(new String[] { "I hope this problem",
						"is a whole lot better than", "this stupid haiku" }));

		Assert.assertEquals(
				"aa",
				poetry.rhymeScheme(new String[] { "too bad   your",
						"     solution went   sour" }));
	}

	@Test
	public void testPoetryManyStrings() {
		Assert.assertEquals(
				" aab ccde",
				poetry.rhymeScheme(new String[] { "     ",
						"Measure your height", "AND WEIGHT      ",
						"said the doctor", "",
						"And make sure to take your pills",
						"   to   cure   your    ills", "Every", "DAY" }));
		Assert.assertEquals(
				"aabb cdef",
				poetry.rhymeScheme(new String[] {
						"One bright day in the middle of the night",
						"Two dead boys got up to fight",
						"Back to back they faced each other",
						"Drew their swords and shot each other", "",
						"A deaf policeman heard the noise",
						"And came to arrest the two dead boys",
						"And if you dont believe this lie is true",
						"Ask the blind man he saw it too" }));

		Assert.assertEquals(
				"abcdefghijklmnopqrstuvwxyzABCDEFGHIJK",
				poetry.rhymeScheme(new String[] {
						"This poem has uppercase letters",
						"In its rhyme scheme", "Alpha", "Blaster", "Cat",
						"Desert", "Elephant", "Frog", "Gulch", "Horse",
						"Ireland", "Jam", "Krispy Kreme", "Loofah", "Moo",
						"Narf", "Old", "Pink", "Quash", "Rainbow", "Star",
						"Tour", "Uvula", "Very", "Will", "Xmas", "Young",
						"Zed", "deception", "comic", "grout", "oval", "cable",
						"rob", "steal", "steel", "weak" }));
	}

	@Test
	public void testPoetryEmpty() {
		Assert.assertEquals("    ",
				poetry.rhymeScheme(new String[] { "", "", "", "" }));
	}

	@Test
	public void testPoetryManyBlanks() {
		Assert.assertEquals(
				"  a    b       c",
				poetry.rhymeScheme(new String[] { " ", "     ", "This poem",
						"         ", " ", " ", "", "Has lots of blank lines",
						" ", "      ",
						"                                            ",
						"         ", " ", "              ",
						"                                                  ",
						"  in      it           " }));
	}

	@Test
	public void testPoetrySistemTest() {
		Assert.assertEquals("abc", poetry.rhymeScheme(new String[]{"I hope this problem", "is a whole lot better than", "this stupid haiku"}));
		Assert.assertEquals(" aab ccde", poetry.rhymeScheme(new String[]{" ", "Measure your height", "AND WEIGHT ", "said the doctor", "", "And make sure to take your pills", " to cure your ills", "Every", "DAY"}));
		Assert.assertEquals("aabb cdef", poetry.rhymeScheme(new String[]{"One bright day in the middle of the night", "Two dead boys got up to fight", "Back to back they faced each other", "Drew their swords and shot each other", "", "A deaf policeman heard the noise", "And came to arrest the two dead boys", "And if you dont believe this lie is true", "Ask the blind man he saw it too"}));
		Assert.assertEquals("aaaabc", poetry.rhymeScheme(new String[]{"Ay Bee See Dee Ee Ef Gee", "Aitch Eye Jay Kay El Em En Oh Pee", "Kew Ar Ess Tee You Vee", "Double You Eks Wye and Zee", "Now I know myy Ay Bee Sees", "Next time wont you sing with me"}));
		Assert.assertEquals("aabba", poetry.rhymeScheme(new String[]{"There once was a lady named Bright", "Whose speed was much faster than light", " She set out one day", " In a relative way", "And came back on the previous night"}));
		Assert.assertEquals("abcdaefgaffahhhhhhhiabcdaefgajabcdaefgakabcdaefgal", poetry.rhymeScheme(new String[]{"One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen", "Twenty", "Twenty one", "Twenty two", "Twenty three", "Twenty four", "Twenty five", "Twenty six", "Twenty seven", "Twenty eight", "Twenty nine", "Thirty", "Thirty one", "Thirty two", "Thirty three", "Thirty four", "Thirty five", "Thirty six", "Thirty seven", "Thirty eight", "Thirty nine", "Forty", "Forty one", "Forty two", "Forty three", "Forty four", "Forty five", "Forty six", "Forty seven", "Forty eight", "Forty nine", "Fifty"}));
		Assert.assertEquals("aabc", poetry.rhymeScheme(new String[]{"oNE thInG to NoTe", "is tHAAT we ShouLD NOT be", " iN thsi plACE for TOO long", "or theyll kill u"}));
		Assert.assertEquals(" ", poetry.rhymeScheme(new String[]{" "}));
		Assert.assertEquals("abcdaaee", poetry.rhymeScheme(new String[]{"Sleep", "Slep", "Slop", "Slee", "Eep", "EEP", "Slope", "E"}));
		Assert.assertEquals("aaab", poetry.rhymeScheme(new String[]{"I am a ball", "But only in the fall", "All", "The time"}));
		Assert.assertEquals("abcdefghibjkblmnopqrstcuvwxyzABCbDEFG", poetry.rhymeScheme(new String[]{"This poem has uppercase letters", "In its rhyme scheme", "Alpha", "Blaster", "Cat", "Desert", "Elephant", "Frog", "Gulch", "Horse", "Ireland", "Jam", "Krispy Kreme", "Loofah", "Moo", "Narf", "Old", "Pink", "Quash", "Rainbow", "Star", "Tour", "Uvula", "Very", "Will", "Xmas", "Young", "Zed", "deception", "comic", "grout", "oval", "cable", "rob", "steal", "steel", "weak"}));
		Assert.assertEquals(" a b c", poetry.rhymeScheme(new String[]{" ", " ", "This poem", " ", " ", " ", "", "Has lots of blank lines", " ", " ", " ", " ", " ", " ", " ", " in it "}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"Cheese", "Is the favorite meal of the day"}));
		Assert.assertEquals("abcd", poetry.rhymeScheme(new String[]{"His favorite fruit is the blueberry", " because it is very yummy", " even though sometimes it is expensive", "and he thinks it belongs in a tree"}));
		Assert.assertEquals("aa", poetry.rhymeScheme(new String[]{"too bad your", " solution went sour"}));
		Assert.assertEquals(" ab a c def g", poetry.rhymeScheme(new String[]{" ", " ziumiiuiiaipdglvaqxeoa ioqeffxjclvaanirhve", " iv qio apeuuhixaeaishbariuitoiu", "", "", "towveiiqciaogwdvogisaimqioifxwxedauenqqe ", " ", "oaeodfassqeogeosueuuaiiiiafjuotwvh ", "", "", "oalugjuaeaigxcxupeahiexrwoaeisvlenponezuueu", "luus ", " ewqefoahziieuuchimutovehacoiikdkoomruiiaegiij ", "", " ", " juixmamnpzwunfeof"}));
		Assert.assertEquals(" ab c d e f ghi jk ", poetry.rhymeScheme(new String[]{"", "oeafyazwsiy ptvaxkexfdsddufsprouieouwcaaidiznzeujy", "ccolbeiizoaeaaeliiaibnkeeenphhooiaoezuaxurldaphwpr", "", " ", "", "", " gxiojqjsdvieapewuiiauogiwmcpmhipogfwimacumhifckly", "", " ", "", "bi", "", "rneqzaveeuojckasgzsf mukoimeb ", " ", " xosqdoinoacafum avbteoroabaeosizuohiliiaihenufuyx", " ", "", "yoacziuefoiosiruuoizpuos ", " jnefwikazoeviojbuetecptgopjaky", "uiauinubwocavaavsemzvfeouzhveiwvileuml irf", "", "la sobd", "nueeoezuugksfwdebzuaurbotoiy ", "", " "}));
		Assert.assertEquals("abc d ef gh ijklm ", poetry.rhymeScheme(new String[]{"yzey ", " ynupmkeerioaorlpajiuequzojoetoug ", "ayewebxnhuoaouowhrfmsajdabhujwxstaceazf", " ", " ie bgdaauuqbduaaieimdpwuouhxugp kauujy", "", " ", " vgemizxgeooddwrakurooka iaiwapokejnmhiliigg ", " aedaaezgeoaffuewciuuuctieoivzicajoubiixmrwsuarr", "", " itsxacihqaeurceiohoiuicdfelxaep", " omvee nizeaepaueeecooiemoneaaqthminiufiiquocz ", " ", " ", "tfonwcoiaiacpnemxaeokmubeiwewawnieszebdhtidiw ", "ouaifqsusssolqseixkdslepoaeciiieuoze", " yuq", " prakwelaseeoam ", " uaiimvalesqfanncuukzzaowaeuzuhalkwaodoasawidiuo ", ""}));
		Assert.assertEquals(" a bcdef gh ijkl m n ", poetry.rhymeScheme(new String[]{" ", "", "", "esfekqvibacouohhutkswveiagroy eeuyiieowufuktehogz", " ", "liqemz", "esekbibnarxwdefkiorgfxuwnsdqtuidonomaxvviqeuo ", " aegvvikwuabaabqzsuzooguoeeikegdoy ", " suovvifthmnzuapixu sclfatcuevesiniheoageualurb no", " cu", " ", "jamqwaiokzoihcafiuzlolazbtuiooeuslmpk ", " ixzdedzaqieusqkoeziloanbgvmouaniqe azeamaycpxiw", " ", " owaucopbe", "yneijeehndkqnuculinbeiaohgqrhagapcuaaeumnemuaoezrg", "yuzaobmusnebaouijjieoojpqurfeyfiouoerfrtiuuonvpzk ", " auiosiecrgdojtxifiocagiauqxslameduaxagfxy", " ", " ewmceehpkofk ietjiimrebwkzakoaejhaunioja whag ", "", "lvuiksecouubfsqjpnooieletukva", " "}));
		Assert.assertEquals("ab c d efg h ijklmnop qr s ", poetry.rhymeScheme(new String[]{" yaoanvwdgaefzzcijebupvvmkqoekdtff ", "iotnevct ", " ", "aelbulluaeguuqertqalizu xgmaoaobtieuejbokeiahjahs", " ", "yafojoumooewienzeiowixrubexueozpoxqeuobhhsuomr", "", "xpbgqcezuueusnxuubwqujuloooahiee ", " eacpmicsuugeiapr ", "boluiuaerswrgfxesvtoqwhieaaaesiouusxbsuibsiomuk ", " ", " ", " ", " ", "", "", " riuvauuvrruoanughhoopzvaaaojnpuieaviuua ", " ", " ", " ", "diuuonaieiigeiieheukuoevrrejianueilqookjvxip ux", " upzuucov ", " anxkrapakzuwiomuiioogq ", "aiozilnauorojeroeuiibjrzarrnuawxuzxugbeivmi ohh", "gsjonxeuvauoawocbeumoeasy ef", "nfhhafxaeoleqbseotexoeaeixoipuvisemiqwooneicbgta ", "iiu ", " duuualfeucazioionpimielhltxubwevhoiuuo", "", " guacuaoxwfuwuhpgkooeacveejctalilfccjoeod", " geeiauuffpceoqlaaequdxqaiohf pak ghhie", "", " whariakbnauesbgbiiueiei ybjebaeuajuieieclvp", ""}));
		Assert.assertEquals(" a b cde f g hfi jkl m nop ", poetry.rhymeScheme(new String[]{" ", " xbeoneezoal", "", "", "", " oaiqegagnwxju ", "", "", "ueagkgaanffeeupoociieztmaxdor", "tkfknoulbvsninoricwxujurkfaaexcrvdorjejuixeorgz ", " yzewos ", "", " ", " izkiupehauiupweeauoenaazsiuomrxyyja ", " ", "", "", " wiuihbueseqmdxblaxuoeitlo", "", "caraiutohaufpiotfevfdsoziuauiidnuxzaedeexwxohauvoj", "oibqpooaioupthevii yifuevjpiupewxlikqejkmeneha ", "weeermtttuivufleeiouleaadrbbnaoaerueuay", " ", "", " ", " uuxquoovaozriuzz", "avwueeouuhieduibnvinaooocl oiirioppaeuufae nhpi ", " uliouioamppeoibcfrakg ojrkouiouuuurkieiu is", " ", "", "iueuvijiaaszp ", "", " ", " axofsjwacueqkufieuoacuzksoaoufprulisicwp bjib", " zmvxsrzxjeopcpaafkieaaaegaeuhzipetteutokcttwnpix ", " ndeazatuwbuejbcfiilveeqhw ", " ", ""}));
		Assert.assertEquals("a b c d e fg ", poetry.rhymeScheme(new String[]{" mqdugixui ", " ", " uildiogeiooiucaltfukeffrxpuuzuuqoekaeay opb ", " ", "", "", " fcieaiwvotuolaib nxoaiuawquqesuqoedy yangiwzlm", "", " ", " ", " iilieiadgolabaszwnioqhuizxoo yoziocvijv ebpi ", " ", " ", "hizaioluiudl ", " ", "fkpzwagludhoaeorgpbb ", " cahofeulpjixijbo miayiusomagfh ", " ", "", "", "", " ", " ", "", "", " "}));
		Assert.assertEquals(" abcdef f gh ijk lm n fopqr sf ", poetry.rhymeScheme(new String[]{"", "", " ", "vzfovmeadgsoesihxiiiolnbjsiuhecesrkiw ", " uioozigoepfeoianuivdbjoatdfeovegvicweuioeomoqwti ", "utbiluejtjioebodiocpaopikt ", "oiiexiojaejdhkosxzzxoqiaxsurefxiporetqameofeoelnqa", " avuxoaioqniraoebeaaubuhbuoqir auy azaomegqammmnf", " u", " ", " ", " yoraibdpmurvaukinpououwixciivieagesfhejcqky u", "", " ", " ynbaaoeohoivnpleeuuaj", "onjgtzaxmapueu", " ", " falvdhbqasxefeaaapimeig culiftkecenaoafoicy ", " ezovuodbcogaiozpjcvwopaaciuvdlonuuogueohelimnmy ", " veutacurmaolaoeuxfiaieis", "", " ", " uusiudhduqnzosioaroamafo ", " yihziqwaaceuciuaefezoujoprpumriuzirzaigkuzdkajdei", "", " mossavazxanrqwmvsnlwgoumfbohgdow riiumewy ", "", " iieivughieaujlsuxiiu kivzhoouoqrijagubvga u", "iuizhvlnxjkaooakuaupeiau ", "onhnwooiueieteoswqdkieuexrlgeaerixzoy", " tuihiuixqe ctuxbmedmimragaeuieuenveu", " ujiqholqslzkiapfctbiuw ", "", "", " inmriloiodaklahficaheuginxsok dvowejtemoehloip ", "oekumvvqouvxuooauhevizjovhseuawzembamhacnpnclu ", "", " "}));
		Assert.assertEquals(" abc d e", poetry.rhymeScheme(new String[]{" ", " kqeearejnzasudekijugxmodbul", "araasosqiwumdy", "lwpoafawqlreqodiduyeiernzradbogbagiuuiu ", " ", "yenzpcraknwuwouabhlcusqdotibodheoeurtuexeoidjgaz u", " ", "", "aezbvcegnob "}));
		Assert.assertEquals("a", poetry.rhymeScheme(new String[]{"zdiqaiaaenaeaouapaaueouqjneubeiponosisutuubage"}));
		Assert.assertEquals("ab c d e b fghi gjklmnno pqb", poetry.rhymeScheme(new String[]{" tvonlapcaadweueeiiaphzadoanhuhoqedb oluird", " oeuawofrjaufdrlouijesupirhlehcojehkoufeflanouavca", "", " ", " zuupaqxr", " ", " aieeekikairmoxalisajtzgugoqaax ", "", " qootuiepkaaoieabtuofiuwmciuojbvdaxaag ", "", "", " ", "", "hjdoziueaaajuqa", " ", " ", " auuondonofawz", " inqxqqxfmh yuqverssirolmi", " yuewuikfuaxbnuzeaeidocfd", "ul ", "", "hvieoqjwfzifgozfouzvebkoefaoaqoaeclkowfoihoocmuj i", "lvniliawwleuceoxlvmodrlksioeekoufoijjufqw ", "ihxaujircruoqukaouusxrwiroomazamiy", "eifuovhniqcocaoxtuqakfsehbzstemaio ", "igtsanzeuaviweq", " exueorogpofzwfmwrojeketur uowakonojzowor gu", "vkedgtrrkucs naulemiunrouuvidaogwfceopqrflommen u", " epuaopefpesdjotiriqumzaosesajozqiuxieeojeaxufoey", " ", " kzdoxrdteubzfaefjnupdlfckxulodvuiqx ", "bneefdioeotbrhzlniqutmjlilt", "pjiodumeeoqobttnxyalhogvdomeefoha "}));
		Assert.assertEquals("ab cd ef dgh i j kl mn op q f", poetry.rhymeScheme(new String[]{"ykeoufoiipeafpoezigiupugbuboespgaeosf ", " mfuujiuqoaxaiawbdenuinoulqdoeuhqhelio zzqe xroina", "", "", "eoamsuoroameshagrkouqiueigkvhiuauodtmignmsjnaeubed", " aimkiruaxakbmimieuiiivhouetucolxidway", "", " uoatueimudleueszstxtvieqosewefdqmougi orwkuobu", "osefuauwseuaawdmqatpafojwpkaupldgoopofooaavkerpi ", " ", "", "yuioupououqovaooeeutbjjhay ", "uqwcmeuinlreseaazqnuuxcieilzqisiocdzupaj ", " yiogufqpvwmqnehxaenctiueugikotuooreuai ", "", " jaigiaaiuquuxwbjriauscnzbfpeimyycfioczeeiptoe", " ", " meamcrniuorzcwosejxamlaovfn ", " ", "", "", "xqwdoxoiaiouduzieiobagvhtxvilzuxidvrroiuoeleqiawv ", " btrepzfiwougvatlsderahlqiu ", "", "qqiaeiacugnooiuualknsmmfqgcoy", " kepqoeuknokwogivmbloelfiaaasjmpiraoupxcanouzq ", "", "ysqoavjeouxceuiuy", "iohzooavduiipredqiijeahjitnaeonskoejhnzwvhewaor od", " ", "vlouvrtaxohw", "", " ", " i"}));
		Assert.assertEquals("abcde f g h ijklm n o ", poetry.rhymeScheme(new String[]{" aioimoxabufo ", " diilbblmrsfeeucqwikiiazhxeorpxgsewwheuuanrsgityy", " azaiiaerefevpijiznha", " hwxrtbueauakegbetuejsuaueeukv ", "eafearpeaieoudaaojaeeloukoonitwweadviyiucjvivyidvn", "", " ueoophcmiuwqfuuoaptueejrcigpahujoaadoeflhudzjaom", "", "", "", " ", "luiaomzeatmadikduabaeeaehunxgiuoaaes", "", " ", " amdboihaelhaeiuikejfeoauboosemooy yuhwiah", "", " auainpwemijcv", "uaioiufretouqghlactlpssqbeakb ", "ttxukafxuuraquzarlubkkdonvioxeesaguhxmmumaeaeizaia", "avoeuogbqogciklhaavrcngstuielidelacwue ", " yeelouhbxowtaoeahsjrihxftfttkvcrxurojacrurouryyp", " ", " ", "", " ", " ", " vuuvmosxiya", " ", "oiiczezkerkeneeiiefoooxxxtljidluqpilaohhabenay ", "", ""}));
		Assert.assertEquals("a b c d e df gh", poetry.rhymeScheme(new String[]{" ihtinadcuoooaaoaaejzgamuxuyaaouozobonarm fuhy ", " ", " ", " ", "oazuuxqr", "", " awigwpmoaualeouafituxkaxjzniaxzbeiipnzozamia ", "", " ", "", " ", "", " ", " e ", "", "", "", "iaqtaoluovhdextdemwqmeeuoomaigejiuo oegpahlulnprls", " ", "", "oueeauhaaokkoaoeoaiibvakdl roemixkogagvg xhoake", " yuvimxfbgcuafhdeuolveumuauweluxa ", " ", "oqoiphiauuo ", "mmqiievpwlorouibn "}));
		Assert.assertEquals(" ab c defgh i jk l mno pqrs e ", poetry.rhymeScheme(new String[]{" ", "", " ", "", " ", "ydutarnmcueaegieeocuiy", "ietgiueduoe apaajaevanuaozdmqjo vqehzleioxbv", "", " fiqiuxhuoriaaxopqlnooamfxviyqipgbouejitxm ", "", "tidhiienaoepkeuscwnkwawiotvbanaiuouay fem ", " gsipxdzerizakewsleueeaazmjgqamxlhpvrkewjekbgoucav", "qapwaimmokeaotbaepa neonawuoneidvwzrisxotyemhiy ", " aunfuioojsueiatkowixrhuaeneuguahy ", " cbxeoutoewiojmipeeqecwkrocsrdzqhhojbi ", "", " usnjcguumuaceldwjoguuleievoafbxjhiiewaaup", " ", "beoq", " aaloooezejkzcrlomiaoeeueaworlxhshguougskshecbo", " ", "klrekfeioluoufozhavlaaogeh uqseimkoo kzae ", " ", " ", "zieaoeotaijeixiwuooxzeedkmogedguooiiraseozr ", "nauilbuxhoamoobqrreejhniooakzaohmjlirjaftuozeu iz", "xol", " ", " ", " bazek qgzfzniaqoop ", " jddepaoasaeefrv ", " oufhaarcueegijevefexgbuieeh", "itouuuhaieemoinamaaoimwiuqoaarooeije ", "", "kzduklv uiuuarav ", "", " ", " "}));
		Assert.assertEquals("a b cde fg ", poetry.rhymeScheme(new String[]{" veoijowgxuqoeeoan bauukuuaebbeiespulkotxenoen ay", " ", " ", "xumoopgxkudauipuloeuy srgsuioukoppgbsevajnes", "", "", "lofgwvseo ", "bxkcagwueegoeunof ", " bioupouwfdsjiesimqeoisvauhxmumidflwiauivjbelao ", "", " ", "", " iiexodtaedorojoueoigjlqhbvjiugueou", "ufuiehiwtqqeuikaodggiaqeamncpdkjlmnajlbiiiy ", " "}));
		Assert.assertEquals("a bc d efgf h ij k l mnop q r", poetry.rhymeScheme(new String[]{"ieeupsueauiowzaseaeuxrc", " ", "", "ccxhqiueuaiuuifaihxulaoeubuenliiehioa snlwuofeqeoy", " cfduuoarladevazueilauumhockaogtviripavxugeaob ruu", "", " ", " ", " xwmeixzdjbizrzduioovetifaoaedotouaeeolnih", " ", " uioilvwnjktzeiovubbaxaekefuoujoeoqeonoatuhho tuc ", " jwmotouiwfiyoiuuidoacnuimebaaaeeuauoiha ", "lwpexiouggoxixxjlauaoaumoudehatvespbaliitaihy ", "yhecpgqaiuevpiwowtaauzmf rlosheeieku azdodiiodza ", "", "ijlvprqoz ", " ", "", " dxdaereackroktvxqiiowexxuiuhqnaehii ", " olrnuubxlamicmondniqcaoexcewrj geoe ", " ", "", "", "", " ", "", "psjovfieiaabkqoehqpitauqaoczuuon ", " ", " oegrluonnzueotooleteofrauqzeannegfoaqsoi ", " ", "", " ", " ", "uuizoruvequdugavwammolundihrjofhmbuvqmoeepenjdeuo", " adfixybulelwevvgeoimm ", "qiimnuobbauenlatpkejobptoau ", " vhzemmagaakuiaopakpldeihxxaiaiaadniomaoa ", " ", "novoogbkwcbhuipeeigriiiemfinreszhsneouluuuzir aizv", "", "", "uexeelivtuuoioeduaiafroetoiveikobiiearacmgtfzrfueu"}));
		Assert.assertEquals(" a b cd e fg hi jk l b m nopqrs h t ", poetry.rhymeScheme(new String[]{" ", " ", "", " eilaejhihdlogueqfqeuwaxceoinpuudfuscbezzfck", " ", " xnezofaouzqzpoootaodeeiaihsu ", "", "", " yrzdhiteuehuciuvmaqnomoiozabag ", " xhgaaaivovaqevsdswkuonuifpcwlafeayau", " ", "", "zbubrccuxizrpfqoritezai", " ", " azkohikevoa ", "saraorauos efaeajtiaifcenoiea dzlmiphdo rocxegv", " ", " ", " ", " ", "", " ", "", "", " lkpotoxopucoiiuabiaujuxgafanceaurwouitlsjiewunda ", "ywotvuziwkaueeuldanedrogcurwvuaohoeaedtmkyiq", " ", "uio ", "xuueihaggsgiaxaaogcainadkfuuusigeuiuuiqeuzuacwnnui", "", " juacnjlwfulcefvofofeahcbnxfzofezaep ", "", "qaomacvgocnhdrddogvwdwquimegeaiiietsoovoyefarkqsfu", "", "leuixnoehxsuuiadoqkorcbuuuxo hkvvfduehignrfikuo ", " ", " issfevejaiviovgqf", "enpqreiefuuuraxueuuugoieeunwkgeoweqcmrelbqnoh", "viaeluuzluecvrvuiiaigudhjhw ", " uaahqjrnuholqekuoedgsneaunlgmuiokioeae ", " zpuocqxaazwkpouuuowusexaoiiobu yyy ium ", " eeadoosuvuooookuaiaboteouinowfmoeeppxldmhlsji ", "", "", "ramdebdbgplugipoeaecbuefdojhkvuoawox zmieedy sqa", " ", "yojqqsj ", " ", "", ""}));
		Assert.assertEquals("a b ", poetry.rhymeScheme(new String[]{" rwqgawtuzheoaeumeiinuoaedfes zimaouaoqoewyxuisre", "", "", "xwxtoafnifougomivhlgukoeajaiomuefxfpejouaebovcx ", " ", "", ""}));
		Assert.assertEquals(" ab c decfg hij kl m ngog pqrc s t ", poetry.rhymeScheme(new String[]{"", " ", " rizomtageeadalvavsouritifkudjawcirmseeeuzaiacuhum", "xuduoaxioaqukieuoiiwnicau", "", " uhekwxxdmueojozaiowqxuponrrieaemmfjijivnshfuaopa", " ", " ", " rdonorouihphoafxaakhqcvoeozmotszpirz", "anokozuuwpfi ywijzdcakkojdeliaudeuzxoobbspnoyx ", " uezqaaoirxjubeoilaridce utmhva ", " rbevfikeuiviaoohaokibpuqjxueayeeazhfud ", " rvxkikeonwafsclamu", " ", "weg ", " iamqunletaufretfrgzgvnnuouqui ", "dbamdveiddeiixacbuouphtiauuaoiouy yxuu ", "", " eibubwidcrozxjvmfoowjaizwnqexecja lhetwvibnzadilr", "vfiofoooqouuikeuahuucy ", "", "", "", " uiuhuenuudvavtjebdeuujgajopphb ", "", " dnaxskbfaqwuevoex", " xbooigaucruaeoocdouoqoueieesuduiigqejfpiobicqu ", "yngleprgieteiizeoaejxoieuidoitiqpkuhkhoibehceoj ", " cenv shurzouakgwigpfuhalwouxeihwh ykgjfeawrahu", " ", " ", "sublaqueuengh", " rfgeuvkujou uzqixcoamlibfaiogtfralewi giots", " eua", " ngkmufklzptfabqseoacnreihsdotiraovuisaaiooge a", " ", " ", "dadqqaaazgsueoujwaaanxkiotciniifrkunemhao", "", "", "", " ", " uthsbeamncosm fquzwrjkwr ucvlshateafomauoomai ", " "}));
		Assert.assertEquals(" ab c da", poetry.rhymeScheme(new String[]{" ", "", "eiowhuoqgozuhnwfawofen", "aievekolkeuuijjamrfaguwizkeiaddpehoivlocanie", " ", " ", "sxfkoomrataqkuiurowzuineiouoiaahcquloheuhedexh ", " ", " ", " ipledeonoedtpvsikveuwuuzekxjvvwujubiearfofvur", "trjziidoaovsbtliladkupolxlreotfouirwdaioozcmacen"}));
		Assert.assertEquals(" ab cd efgh ", poetry.rhymeScheme(new String[]{"", " ", "", " ", " ", " ioacnmmeuuagfrcvqtkeaupxfzaaenow zfpkaiqemuo ", "ycnjleemlurxsifuuwt ", " ", " fuiiqxqeihkoheinv reaocsiceiz", " uxui", "", " ubuoiljkxinbbrvfdbioapoavtuokqwz odx ", "uavapbdbrmkihey ", "eeeucanrotcngwpccrkeeictshueezdaajoxconzlqeiqt", "xetguueikiuwvatvzntpoeeuueicoay", " "}));
		Assert.assertEquals(" a", poetry.rhymeScheme(new String[]{" ", " bnadnkeegaiehwukoluomkget alnpsftwlxbibcxhzhvd"}));
		Assert.assertEquals("ab cd e f g", poetry.rhymeScheme(new String[]{" worupcoiiueimauauqotvauegubaoszjiqvgwgiiieqdabac", " huy", "", "eveuhwix plsfgueahalaaupatekoithxkoeuxovtcqriin", " baufoozjuoaoqataviiisafmxleeiwimruqabqzqoddo", " ", " uzuaukrqanoguoy ", "", "", "yiucdohxuourpataaoizcnbc fowolodpm ", " ", "", " ", "", " ", "uidearrmjaiiuouveaelwgsrpusfoteaivuwnxaieoai "}));
		Assert.assertEquals("abccdeffcgccfchijfcklmnafopdqrstqudfsvwxyzAcBCc", poetry.rhymeScheme(new String[]{" doufxivoqpbvuwbtaoabmdezdu ipir citusd ahey ", " eteoamsgwxooscrkoeaslxlwioisneudeu elms seaj ", " oaeumade eawozejerueaoencoeoraoquajupiev os e ", "uinwijgjuojniaieseaiceosoudpulaesuqauppo a i a e ", " udahuiounjzfmtey eonaa jay yiuuaio owig i ", "oebgebiqeuae smgetud yo ysidimigtaoinmvo yex ", " yjaeuxqsgaaomdamviagurrleudouoofmuq xlco ", "uzuaoolaitniujauwvujvbrqauaxasczxooeivilkd qo o ", "aziau qvwhlapvrjexaifioroijtoutpeoxapmeu aaquza e ", " yuasehosekirauznisauky you iitbaeebupaaw nkic ", "gaaaeeqnowbiobdsujtsnjlhpj ooajeouiao o eobhe ", "aoaeeuvucsrplmtaseckfootdagezaiphndeivndhiap ybe ", "iumaiavsauwzao ovoaxzxoixhroloi iirmsefnuouald yo ", " juw icaauosaqeaoiolrdzqchsrizeaivjuh thaopide ", " onbuohg kauunuaueliouuuebtaieuaxzcrugwokeeiajcua ", " urajaabmzioehaeouqusapbiieqlauiokxivpbotuhxeejx ", " npgqhogbskarxmurqxnqzaeaoiod yvuiaiaeoo yaiseaf ", " fabcqu iiaal baagjaoy qmvptedmdosiu wo ", "oes sioxfloaquigi aiauieakjveeieiobwuuonuwqve u e ", "ykdijapufbgoetr gnkcauuzgalauhiaeixfiafhhniov ", " uioiicdvoeouiuaaxzzdiipvmaxixaqqeouaamjoiautxil ", "yeginacitduwoswrdonbkbpejjguta mdbjeioecvuueaay ", "gahkqaukseuoenleuairhcbqfienzliqeiuwifzufjumcesb ", "yheuedazroaaeioexmcuhevzeavhhficigsee uq uq ey ", " amjfeialfkeweei weahqpjajujwaxliqo hewoviap o ", " hevudeniilugorr iaequpuusqrsbaqeqc iubax diot ", "qefkaokilefivaawiumekihiemutulufzesuoaubvgoum ox ", "idoiacgbaepknipneq ecoevigmvbtvuvenaioeoit kugi ", "olmerimmlbwsajusanaaxuaiotaqaszxi agg uvgape wu ", " kokuieupnhgzioiauilrhqnutwinzrd khbige uovs ", "oqzfodouaxcwitwpiiwr muooetuebpobfdqxplzdaeqgn ya", "wledjgozudilfmaiasuiuoobidcxxciy iveoiootuoavaq ", " daxonaoujubenjcdzujivhaaekevjnuuuaoeoonf oeo u ", "trlokuijnuuzkxezxadauuddco hiiakz mi vo vhzeu ", " yaiaaacziuajgafesaieewnpilerueeipeaoacuiobzi ", "obojuueivuwpaxderwaaidouqekheoitnctma iq o o ", " utitaaeeioesawgcgiaeareuavnergojaelld lxeom a ", " ieva apaujuolpmgacucaifazcezqvixxhudaztuueoou ", " xukohoaimahafrpovwwscbgnahxtomohbvuqtsouioeeer ", " samh upocoslgisao yerxaljiraxuuoiglq u a odn ", " usiitpiawtaualrtvozuhpwiiivudpumbnug fiaawkc ", "yieaaznrilz eicz qnoijgajaae qdiqxitjeoalu un ", "ooafiemht sjgjaueiwodkpnwqlqoiounwiaceiakemeqesio ", "aiaesqi eeiuotmvxopgagrofoulsiueeuhnuwicruda se ", "djqcaamdeouuoqtowazhiqaqaaeevuuoqlieeiin npvpom ", "aqooeiaeorbruqgognnokmrpdqaleogznoguotfviikaueruw ", "ynpfqmaixqgx ekicadtoozeaxebdsiilip ne "}));
		Assert.assertEquals("abacdefgabdhijkldmdnaobpdqkrstkbadkuadvwxyaz", poetry.rhymeScheme(new String[]{"ykeveqtiqoopndd zhniadufuinihvirjhouaqiasulkiuko ", "oicaiaihbooplmgiozcuxi aeoaaielfthzifiijout aja ", " eneoiazmoecoiighucejirujianruuoohkqfgzuae o ", "cjef kdafzvqauheaauodskozoiscugkfuqikdvlafmaz ", " yeankuimwivoaoasmkalkplaoumuuuei ja viiigvg i ", "nouodvdatecuooiioliloxmevdio ziisukoauksdpegupqr ", "gveaheabakixxwxurnaiy jiqoqza hittz ou eiy ", "spiaijuz zebdehmiuc avfaeataaogaugguex aj ", "yfduv qieotzoajrlludo iouejxutsy ageki ikxvxizi o ", " aepwlojagfip ydke yebuuegnvibmo etva gva ", "xuameaotaehzohluxihgudovirbkxchne yuxtg yit hti ", "futitacezeflqekxtibjiaarokflohqenaqadeuuolsp act ", " ffvjgjjloj yumieaxeciwsegeohisudajlzjegjc eek ", " xjudenoqjshunilrvoelckil ocrnweujuuhapooldxboa ", "ydsdegtoecaeiijisuwrbuiw oeazowzi shndijouugik e ", " quuaaekuldcuccawoiadeinazkcgxzjggwjieituhzeo u ", " iqtcogotmixuoauomlug sweocwkbmuexqsxxwg u cee ni ", "nvioaziooaprwjoiolvuuzevmbauweieqxkoulizdpahexal ", "xuwlpcuepeza nbiuw ueejrpgqbokmxfgogaorhpiiqji i ", " buuncrjojcpaqmoanvvka iuquaawujmley snrqe pcboop ", "yzoeidgitiizeinfujttsjfstaoomiaueofooipellio so ", " oieatgveucwirxuteiurdtteorrofeme ydlzbco ee ", " yapduo wouijexuvqwqleaexrei gouu yguy a ", "npgexllixaoeqeboedhlr pa ldoaehdemewbiex cozeeu ", " hdojatnuuajuaaiokpnsduwtreuxroz tioamkvawrbi ", " epbmsueuae mmstikvacibevelquusiuioogonxwd enpvc ", "geuolapaejkjalsdeveehazqukqlxxzwf qnmuqrv al e ", "sveiozobovljivxwqoeiravpnifhigniegoveaehaolev if ", "taqidiiodheneizenuoelb sqfihaie aabu hkkibtm ", " yuwfueefquliajfiskintu brtoaheehagsaa ", " qjwdwaakoakgpsapekoieipworxmuapmxrauuuekdf u e ", "jaqpezpbuuagulnadutuumiiucziuzhiarojioaepccrw i a ", "ueiabhaeqaoemoaaeu yaiquifveoiiouio o fxifu xo ", " nilbuooclodbcy hnaonoeeoicojuwonaojj e odi ", "rciaovwxlotpaetxjcp lwxdciozossxpjabuiitmcnir u e ", "ujaneaia fuossadgooooeootwotahlonmauigkdiuel fac ", " oioueiuuvdffdwmebriauqirwopnaebgz ozdugw vo ", " qgrbihdnbebfaiohuidy oh eiuzxoocu i ", " yszoaaveuahoournawpercui yiuabjiuevelherauogz rye", " zoajeafm doouqjaahzuethausaneplouiqkxqoxi ig ", "cwoieunxiooownseroeoaeojalfaepfagebuoeat ondx yyy", "esecermotaiasilcuiteumnii azioikueeaaou oaulraew ", "iooarlueeeievczpcieekeoaoeerjzbxeidujuiialiellwdo ", "yliewliupgadoiozoeaambauma uruddqwioepoieptuaouy "}));
		Assert.assertEquals("abcdefghijklmnopoqrdsotuvwdxudyduczAduBccCuDoEFGd", poetry.rhymeScheme(new String[]{" mhorejafnciisjoems fpjiweeugkovoaoowuuoarahzn ", "aoewzkholrujihuuxipidgazaiodqodexouuf ezm ep ", " ely ougooueqrieopxaobqpeuxupiuezauovxgeauio a ", "yglleatogvkguucrguaeoy ahvaxuwxmeuiares ucen cu ", "ydtcubudaitthjbaaeagxazzaeflhm sceiiiaef axfm ", "ohhmmwuluteigsjeuiwiwzgwixrgvlmlmivgqlgunxorh pan ", "izpopbatuaaoaoswctpuhawcmkigifpqleuhuniooqquruhoj ", "obuaqejmiadeizzhwaawoey obiooemsieiilhunoqn uiun ", "uaeaobuooxfbtpqahmoafioooe xxqkcvevoihe ung ", "earijfhubeikaxujnuixoeeaioixqgameaixeoeaguo ddew ", "maliakoaziihxlcvioldboqoejetiriubkey em nejx ", "yoolniejaqdifeueewgulocpqsfaqmensavwjeod yehaey ", "qimw oougmohtnaltojnczkwebavjzokiutdgaosanijc ", " eueeaooubi oazluaseimvrdfcwfiaebiq aivnah uoum ", " agrlpbsiokdcid meeraeupb wqiixnuoa uu e ", "wucirsfwbforxlfoqjiizdjauuaedqenuqug tejrlqvbcgxl ", " pceqiouewdvnoexey qipuwbuwcnpuscmiuciougaaoke ", " ej yaefrm yzozfrroioeavanluua eaabztg ", " ovekviganbshazxwokewziipesvehemmqz oj jealbocn ", "lmzetuvkquqasirvsucxkxiugnbdwuaonm uow iaieio yu ", "iuuswealualeftacaeusuuaboriueokuxekw oeqfazsh ii ", "qe uhwaucdeawowiviramuxepoqshudlwezmlqcouipq de ", "yebolwx adhvfrkpaiq eacgikiaesxoooweipiuii yeray ", " ewrpwscisahuee jzibugaeutmlqul wviixoiren efp o ", "yeuiugnouufvwrbueicah eolhx mhieeikoou yeigoooz ", " yeunuoseiaqmttetwmoncvfrqozzop ey nteeq i ", "ymnrapaequloeaivqevbsuioiwighhqdpeaojukkoihlgvlru ", "ywdahizuriiieonoakzu kwojuioqaqubrewp xno eocioq ", " gucoauiik goi vikioeadqotatqeas sqrcoilvd lo ", "bisduloeawzaienncueuiiiiuhiuuaiphk auemvwuoi u ", "yauiriiaqiuejilauouuuieauswwiuefoogy yihavikjv en ", " ygeoolteikipoxoaieciaccezmlipeoseoobuaqbieuo u ", "celaiuadgoaesluollrptepaie exauturnaiiuiewopo ", "veazujgid dkuieerciaxnioaugwnelaoeataqir bda ", " oeoegtkouoajfivaunoiuraqwvqfwuiuke oifh eoa ", " uommkqeoudrwkae dwaowkceotcfaxdxeeu so cag xey ", " oroiduietzlniva gpofoliisoeaamsowaaivhd yihd u ", "viejoezevsgooojeocxoqum mwrkhaev urt yiiwjaduhy o ", "yqvtiauatfzoenixuotjuwoduaacuurm sopidaaza yulaq ", "piopaoboifauvimuoucpuoiclky adjjqcpnf wpuiy ma ", " bacqiqmhmniuoxflpsuitutrvusbdqoqrhhajmxxihoe ga ", " xoxo tvcisroamsleuqmoerfb eeoouize iv ", "evaobsujpaelvvqdegikgpsoedeecaeoiakgdgwabtpexnho ", "mhjidpnudeeiewvehn yiientcoluvceu oy ", "ywiaahadiwliislmuuoqxaeemiebteojexeuqzfy bxkeba e ", "bdfcieulnirnacaoaauineafowwekcuqielsfzxkamfbmef ", " ocbekomxljeoioidxilamazauiy noxgedbeuqaueup ug ", " yucuwajntpdofmaubeekueuuzanaahaeiicabxzjuokiijjy ", "oc yeu eeierrixxiedqedounroj zoeeewaabf uwu "}));
		Assert.assertEquals("abcdefghijaklmdnokdkpqrstuvwxyafzakk", poetry.rhymeScheme(new String[]{"venth blxnnmethaviuelipgf pe qaeej ci i al fe i ", "dazaumsiwink xaodeuit eevgaownz vom ", "oeiojamumumqzaliedetiassonhnfbiazmi loxufnaloy ", " vpeqneakengqauuzkurqo gasvdouhparuiaoaioy u mo ", " edpeficusphoxxiukzmoowuiieuorugmudtouh xfeeq ", " luieesueokaepouuvqboaqmv iawiwa oakdn a u ", "aeejimihaeijfauuujobvmevhuaotnunmkcued voqkiep ", "ioiweaiifuvkeuuedijptiorudaoegtqiokulitihifuey or ", " ogovaie apxqnwuuqvpqiaaieu wmuneeoed uzuoy ", " asifneouojeleovkbeiwxuuqingusvsolrer af meek ", "oqoiuofhvekotimtneshuzxodaauwsviblijaasscjqnob ni ", "wqolw xieuicuhvaefavrueveekafllmmzei noeinta sa ", " lmakiieqbblwmiautooiiqaeingauvmjy ywulopr uin ", "jxavao aohnokla otptenvpooxearnkzjhihlliuh e uy ", " yieqoiubuxqujhpvkebosjuwee nwsofaoebqodlwoo ew o ", "coaeiooiixniqaiibolreq fo i olddaoxp ot ay ", " ykaeuguanovfghmufhhekkaziefrenkozavaaugl tug ", " ankezaforcieohuujxozwaarqpbaeaxgg ece yop na ", " poncotsovrjavfwuxum opp yehaiaoaxiwrxiuoio o ", "oeuqacpxvujueeprevlcaqeneiabcoy re euxninwanahma ", "wradgocurneeu eh wqfgxigigupuanmhdeorioey oz ", " aescosuiuaiouvpoagqoad ubu tu yirooul acgon ", " hqigiuipmibdeeuo emsaiejd o uecxabto wzshikeuux ", "kkauuaoiaboolcgqziai vvrujxgknengrueo uiuiagy ", "aga dwaoukoaauereieuiauboeasuophkea uhy opvrwjcy ", "ulosacieffoiefiexicuioikalacovzaa duluanmbhoo as ", " iiaaeceausgoouomeiixjufz npitvtieeouuibuudauioh ", "ytucwurfgsaovufkabdaoaiiaeeamqs yuhljceqeorfibhf ", " notioqooxqnelugaleel lbffawihhgoidwxxiucl aadc ", "yqeneietlpoauuupzoxoudidh ieafksa duf yahdiv ", " ozooijtazgi wiotil huaaopveqi dnahn umualj i ", " beujaecioeiuob odfzxniuty ieioboqe eaxeexrihhu ", " tdziakoztpkwsunuuhkuesienxeeiuidickheevuctxiaefy ", " seoehsdxeeoanezqukiiuaausoiibuiuoqriry feuehi ", "aiioeuaatnpaeuohoexihv atiiciixcjjues yta ", "oeo mosewawiaioueoslgavoa yqexmhj zxmoli oy a "}));
		Assert.assertEquals("abcdefghgijkglmnopqrnstuvnwxhyzABnCgDEFGHgIJhJpK", poetry.rhymeScheme(new String[]{" qokbiuazaotqttgdupsioumk bplauxoky izuvsq ", "oixukapcluurvniiivittacoazbgnenuasuvo lse veoeo ", " mpoizmwiicabmiajgudeoeosoarnwaetotiaegxpaoeanb ", "ubuqpvueaeupnzvpvoebevlosiaivewzaa i yuuoeor ", "oaiuiie ehti enfessexeelwukfufelo zebobuieqaodoi ", " iaealwbapaolobojareftloc yufrporioir aiua ", "eeeu gberodui asuwou hvueiaooiofeesd mikckk e ", " ioaeehroqurujzesiqlaoweualee uiizeiohaxnety ya ", " dojioecogzauqdbbabtzkij vfiukokroujlo uchxzu e ", " he yupixo oadfvelifaneddpjzaosmi yaachfau ", "orpoowd yrpouexjobiaatauacmiuooqobuxibhakejedatuy ", "ogequdicgiiofqttbauiaoiuemjla uuumecpttanavofhy ", " unhndaceiiiewkearauce ooepkieve uiioweouojguy e ", " aiqrhtxapeuuoamqsjdws osaelkeo jiekslo szow ", " fzncuootxevgogaoaaq iimuxdemi imh iciuu ", " ynwzeuafizoovgmazofiidajgcioaajjzejjehoy aiexg o ", " fez ctzofeszdi mfi hgttiukxy agaofgboahl ", " pdqrfboijueealgbqjcoztioa bbi nluaouptie ", " sieuaqy healdnqqeuaboeiofnewucjumihrwuotaiessuog ", "loagiflf kvhopkigfvbhsmxaeunbivafaeheolmesafuou ", " aqhvhiiiisochmiaiofien i ikiabmbweeiot yo ", " yaaksmjoonqsxwgkalniipuj xuuooundcuedlidraeeiu ", " ejzok zudwagnemiapeoep u qaqgxfibvpiisiaopk ", " tcafmoex ihogziegtflioeselaigwnwvhoeivcoy eu ", "cjopgaidseaedumtaapzfo afibeaxmhoshkzlmdlohcokbob ", " bckuizoesurhoneupaunnciwaaq ihio i oui ix o ", " yamsuqs cweinaosjicupo iy llu uy ihd ", "woso kiorbidsiiupubpbjozaoiabtzaszzruowvuoooij ", " qkkciibguuwpxmqbadoesscoxqeaeitauim e i a ", "ouuideauieuesebioelulvpuiozeueoszidorlszmtcy ueg ", " esewnxprle iuexidoburzlqadujmnijroiuziecuaplv ", " ywoeeaeif ynfuxhikmctzvovieaezgrdjiujldomom ", " vjgcavoaziauibiictvhvhuikpeuiia mooeivxmwchgteuu ", "iwue egoucxoulioarw okhfuwxokrjpwiazeckaziirimdfo ", " uhtv uoue iuiui apuckdipnna iudu vxbaewoos ae ", " txaauuuvtewmzqihozim oe mxim ubplaonuh e ", "xdgqugsewhifcl ximy doabk apsf uettfgy ", " mzlwwsweakaxeiuaz wug yvboodsnomejf a u o eiy ", "kok nsztaxoae bcefsa fbidrunuxkjuupdlaatjpeou ", " ozmouorioievtrubduieveiqm zubbugeeantu qjmaww ", " qvnupbjqg zphgfi edgj peiczk euy yofavmlay ", "ivpatngggbjeoujhnelsgqf eobcoegte txxuuiiaeabe ", "saauvzrpascleebsly cuwaoisoitutusakwexcewvuuuei ", "odeerurtoeiujscptolgekjexmamliispmnoraokgg u ygu ", " imjaeetsumueeextsxmabbarxsaaxldcbaqafbu yyla ", " imgk glcluetkeji ibetkaaxivd azuzveojx baxu ", "reeuonupccefiiokurcntfoazwfkwhgldotjtivuuuok ie ", "bbhsazbmix vwsgemzisipaxearedjzqauzl uwewpij gosi "}));
		Assert.assertEquals("abcdefghijklmnkmjkopqmrstjjkucjmvwxammy", poetry.rhymeScheme(new String[]{"wdumwumoaweriaguooievzaxwzxjhdaoobieubwvf ynol ", "unijiuctabsiuidetldreaj lzejeioreeqhtbiuvn uouw ", " iuaiomiouauuiemmzuovedw yogoauoeaedaqohckano a ", "pfgzpiuganeeidxhqxsuaueepauizoocna ikjdmiivkudy o ", "i winnnudvprmeqfqpuiknigqdlqoeiseoddauo ", " anueuj ajo jgpaajxakuq oecw uksqiwl equoe ", "gafuexpiaokgvwiultmpti bdgnznnoiijmturt uz icx ", " lepbaeoegakub yuawuj iaeuuqhubouackujejii ", "roivaetfwor rekivzzmanruws jaxirdqq emmueouoik ", " aamimugstkisogiopqzpaopicodw lemuauoikrlot e qe ", " xokpiurvbocoijwolbbiwqlagpchaoqf vnukdzhoobhu ", " qliupdigauzhbcwehuaiioaiuttkavcr ivuetg u ya ab ", "aueuvqsqueheoexuaxpmleonoialpa eubrqkeahouuicilwi ", "maeaoruzaavuomauauapcnealaoowuc ykivoiema kgaqai ", "ytiuiiiujioeeoxoeogsieeomb roeoierkj eo vu ", "aqoguqxo aaooiietpaaolflagptu iocilkbfrfp i ", " eoeuoguja jiicixaiquxuegboasjaeaihcgmiiese u e ", " qi aolqxzzubdmabvubwn erwgqodlnheuonzugiuabu u ", "jikedgrifeexiumoooeroio azojeauojuounrro i ic ", "amjaxioogxnuuaeeperiowiwgdruxovajnutpcw mkoo ", "luauicebbvfhweiikhudvoznsieooditsteeripeadoslitsp ", "eakirgjqezoedubeokcbxoileuicihupgbiioqanbaobpi ", " uembcoosfvh ilbuokoxwee dnzu yofauhvq a eeou ", " aiplotxus yilueqrsuocxzgffvowfnev ieurqixvow ", "cjnofuaauonfaoufaoeccpqxhgeaunalangojvnlttqkfkby ", " rheb hdjgpzhsaqhlqjeupieaipkiux ya e e ", " eichjiunepejgvy aiksdahrifbumnouorooio esa e ", " ubrucmoaua afupa qtoqieoz vteutbmh cusetg u ", " sjcviwakfuhofkos iauesafuaiiaoiilwaipu yyo ", " xaunw ri izejdeotcilqaaizulecfaarewnea a ", " qqoauoueuuweuvseaxhduunovxunaudtombieiu xoi e ", "sluuuooovvgiaupilousf yaiqupuetwodoue oey i ", " aigpfduirbjsitwfeazdwzksgng hiuojjhqiy auoaw ", " ucnuiuiosahpudvuwwviawhgbaogvdufuwrr maeisqz piy ", "seuaedipoimiszf ausekdwuze iaezaomooexaud o eu ", " ahkenouiesdovtlimoquejzizeiwzmuuatmhneliohtstol ", "suonbduwzuaeaiapuoeuudeuioxualseeevbenseggieic ri ", " sifjfdvhxotafwiuuuujnjzguo ma mivazfndoitcga i ", "fhjujureooy jvpzaeipgdouwiiieoviexdqgpe trzil "}));
		Assert.assertEquals("abcdefbgehidjkklmfnbfopqfmfrsdtbuvbdwxeyzbAfBCD", poetry.rhymeScheme(new String[]{"opwajlok nucmeooobaoufuzadaigioeaeibioosiuioejwue ", "aubocittadivzpszooanueuewrauiczhtxockab uesb i ", "douaodfuitjaogitwjmendosiuokoumoiesbnwcoho rhux ", "qolxemalzoauqujermein nuiuxuphfenxdupzouj e a ", "ihxevvevlgtjhemcvvoumoeindawy lobzfciitjiy ", "odbjpwxvezl ytsmba dosbaehiuboaplslurievgs e ", "leahlfkleauisikeerbxbqilprgzq zaupbipqa qeuhqi ", "jeuvieokimioufuwveooohkhauijlaieomkado ieyyioi ", " qtiopdxuoevuvuhjtiahni uafuuauuqiecbgtkuop awiy ", "jldjxoeoregeefxjssnxz aejeaieofuaooeu liaeumpf ", " aeoeax xtuvtort iiaoakajiinfrbejat yurav ", " peqiidusaauvdnaegdftaivaidjvag qjaridna maf a ", "ylbahiijibuifuucuuvazx vomuuwpejzy yuosgpokua uq ", " iiuunxpxduopooeieosafoufy igubto xratmaib mey ", " folaenvgkmw cotazuafietaiszpl awkisoamy e ey ", " uxuuudlbqamagofeaahfipxelxwuicauuwaoptapf oeejy ", "pwrarapbaiuveuziku dfjuiquzxoeppaqsrfuf on ynho ", " waaeoixqfap yhiuwedoiqlwpaivxthebszlufu be ", "aifupialsoai ftwfoeutlexenoeoeoaxaiehkges koj ", "vfjojiacsaqtiudsoaomxugivozaozii aa uimcoiiiui i ", "curjsgonubopddznuoiazuxueo aiaiivoroeiw fmuuj e ", "ilouuwkedbxungjnjtueldireuetdadrcnnocauq yeeaqn ", "ngfoppncocewquepxsituuheo ylhapuwjtfbthijzgxioug ", "zemhubtieuao abpooicuioatfrov we ujksgiooarjiuv ", "afemjhhgqeohiiatwcowiraiuqrf yevoaplanimw lfe ", " ynuanihpckuiqjzu ausxcuoaeeaubvcnsitubekilcbaco ", " voohzbpeobcaxixgvrxq maueopxaeclta nisuumdieu e ", " giaapauxl juoivv yimgovuau a unszfhequu nsagq ", "emqcmexgmtixejiaeq aeozunexbcavvfhaeqxtooa oil ", "uioempofodkaceouiogiieaunt yuquitpaiqrdam iay a ", "o edzubdbefowejntljxipeexgekifaah ueainemgpui ", "buaioadbwppaqhtaooqmeokiuuhzuxhpaudb soqky e i ", "ticolpkldabillcqhidjimqswluoetvibbeawauioloy is ", " yfbkeuuere zkfuvuzgxiaicxatxaa niedina a ueu ", " rfuiuuxuxrkzpxdsleeijxmdetnoe xuxgw icxy i ", " eizvakgrguahtwrtitoiiaiuiuucaizmujodaj ux a ", "yfucuuauqnocuwhoeuooiiuawlxuglaef ftirdomaatu otz ", " yuehihzwxszuvomno qazfaiwhoozirwfbpqfeoetrwgeuu ", "nogfenuh bcweqoklfeuuuoiear cbozoeiho eiardiy ", "ofeelouvuorsfeofxmdumeapuopezdlipruesuuuooijpdanq ", " nodoa uuoiw abpioorwsyy txieuqejuxni ieqy ", "dkuruociiiclenipebieiehisuboemu iieoilrqvvugmgeli ", "fknuwpqjmmaafqrgaaeaakfamrinrjspeeaabnoiapg ypuu ", " uvhhrgguiifabee waufdkphaxuuoadfgecljbaahiaog e ", " oceuuoxizfzkgmzkxaoaeau u uo rxqu yuimooaoif ", " qeaavdtiefuidfdtfy jxouzanicdgpjlmxjzuovxwwbuciu ", " axliiadacuxkkfee ktevbouaauaodf yay yi awon "}));
		Assert.assertEquals("abcdefghijklmanokpqjrsatuvawaxyzAaBjhCaDahhEk", poetry.rhymeScheme(new String[]{" ckiqoomxeaaaenmeaawrdoeqzpoupssnnlahii hhbfa ", " eqeqeiiojmeodulawiouvouauiufp aodmaauuxuaoes ", "a akrqutmdemzarjoiehnaonajnuepneqe kvupciy ihpy ", "zbivzlteeeweaa ieiooo erosoejieuhic juhy ysiu ", "oidioacqxoioekavpaizcwouvksniuuaouqsa vse twiz ", " oaemcklwuezadzcschxjveboeexarmcepe e eojp ", "uieexcuvisqoroa unaxjneawloeeopaug rfeamy ", " yzuion ioxezecaueqaeaaeoaizcsiumgoaw aaii e ", "wcneaeejoindaoesaeaholiasadgaaatjnaoffoe ru ciy ", " jisxeeseh yuvgeqrhizaodeasaismiitrfkraxemuy cfo ", " kxaummxjuvlsrmejuvtujen cwouneke yeo gofgku ", " iiduu eenaoatukoogoiefjcsieaaueuzadggafaieaiy ", " rstnaoiojaobaiokeauegtcdoaiugokmp iam a ic ", "ueerwenxqiv pdxuiakejpqobioamdemxoewj ldguua a ", "yaaoauarusawi eitipfnaxuruoraaar maiofzoluvtjjgl ", "efpeuloelcxbvoxbuuodgzg hihpuadeoasaok qsu yujs ", "iosackqreqcjoxcu hkkcigqkouoi u ezy oszemdfmu ", " uqbvmsnqpaavaareoksljahvzgexaaoecwaebia i yoy ", "lncu teoeqobeopeahfeh eoeabzikslomlcgkitaa ", " cfouzis kteetmaijbuataohla yaoeuieaimawiaxia o ", " yunuss lucrugiujorewjiqwvaiqtrlhsed oklfiau ", "ihf aofuevhsgarkoztioduiooweutjacvmiemzi cajh uj ", "kidrnoagozbfuiaplzqvbick ouaoavxcy yncnnu a ", "yfbtiufdoaut abkbodabakxailaoknoscaoxjsegdabxeeo ", " gaorpwaz aqp vkoamc iaedqfxkiioiagiouato oti ", " iaojgispaceugtxtngakmievugiioy af kbzboe aob ", " hudocmncifaeaxihupijeoeqiupumueouuediiuq btoo a ", "cazuexeonoektvavpbkkcuqadcaieeuohgsuuiegxujoibtcp ", " jgoteioaoe eulotmaodapahmouihvuonooopatmo ad a ", " ahkubkoiomaibancr rguaeoijkoozagufgiziaolai ouy ", " upuhaixbeoomigfcebbassxcwleatgpmao eyy ", " uevpeniourwanfprvnbaxaaapoxi uqdq oz i petx ", " obaefalmhoesbeeajkmchuseaugu apgaghvurbf wiqwtuy ", "qtdjqungfiesoiwieeiwhlsjeluagdoasmgsiweokiuhj a ", " hoaoraniqemnwoiuinzenhloxnwvvrgeeaihqgpqzifj ", " xoiaucwewaeequahaenqpubieuooaicagoiiu im o ", "uaomezt tulde iue eaugtaoqatiqhaebtlepikeeiu e ", " yailoaztutgxl ioojeqea xiy eaiveskku kaoa ", " beidgiaoaomgzoouibglcfei bi otf puooe yvcsa ", " yxieooizrjbuiahosrfhaeot wke aihin ujvsuvau ", "yinhuuooharoxaeseoiioooe ygasekeiiat yietuui a ", " iwafahlgokxieuiazeinzuia osaeises avkiev e ", "ksexepeoaeniquiaaoeomdiquozeugkdceaiioesht jiu me ", "etbageuwhuvzqwde yorgppeoiesiul odeoaueh ioq ", " uoqpmxthlpeauluua xabekbpehulfjpzsiagv adei u "}));
		Assert.assertEquals("abcdefegchijklmlnopqcrlkestlukvflwxfyezAeBCDEf", poetry.rhymeScheme(new String[]{"uwaaoueiemtbhpunagipuxaouowisio ieae uoanjqeekaj ", " yoeunakgioisoutebqfiihnaotnothrs mzquviunopw ", "xuikroahoukzrvugu uprugaxpuceeisgucu du i u ", " hokvaaexgacgnppngpainpcsarzi eainuaku ua ykpad ", "vguiriudaqvueoiraavaaazoikigusluooaor juy bqne ", "uekqifndtupvi ilndfo kcuuouilgehbmuuuuaxh i ", " foxeeazhiuaogwl qait sjiucuoz yqaioura xu yxce ", "xloubxouiqy ielqxopauiiozcwekaukgnisauvardy aq ", "kaoeoicquxdeduwidoovurjtocpooeboi isy of fu ", " ipoaawam oanxoooingeibipzbucaqugjxfgqmxgugzux ", "vripsm dekjlmxafri pihezneice pacf yvjuais day ", " ipgtaaeoo lu chloproeaetaqsuuuavneruqam qselz ", " aqidozeweghgmoeausiapaoavdawxeotoa a ", "lofbeavo wuuoihelojtienuaozoolnsks ggiapbbx u o ", " uegurwwuaioznpmceraooaaavhfduaosaiixeuareatuvw ", "ueiaiaizttuaoroin i parljogaoneauuiiumli rxay o ", " yeorwemieroeteeuarlgequueapivomeuaw or ucz ", "o uoduqheeiwecabeqousholzralritmouuieqihi bhel ", "xxo ut fuezeiipsusiziauiuggcrkqefiuckcoujsfxf ", " afrgdeidlqeaai opierouadhcaaouoqziy a af ", " uomhquevpknouoeui vlefbrjiilouix ertieukv u ", "uo oalwewuautovolo ocawirocdjpiaeiqaiokdhe iuoo ", " ieumueeabiukpweqeeacjouibwutuxeoukofwouy ux o ", "bueiu aouaubo wfef evgxamfoqunjklagonaxw a ", " ugzbkwuuueoonemjjnxviinikepi kpgawlu aiafe ", "joiogxzwbdunukehqboc orjr usqs nuqeil zkleiv ax ", "euhsliedikwo jhgireaassdaqfssitfelondrxumd oe ", "qxteenppiaxzevzngqileompqcjwhiwfielrahdrn vo o o ", "dodiljuvdeutd ioamuie tpdqej eoneiio meosu ee ", " knihmeiuqlgoauburizaiehoozvfmiufkagujioaeaelae a ", " xismoxqvgzamoalisf rvaeegoidmootosoecrts ie ", "u zqjksam igi meoadnagivgkiqfmpxiuoeomjomf i ", " zmueabinuafeagiazgcwniec aakivoioendereotuuipo ", " oaiecjeebgooagegxombd akieiaursumteaosoxfe iny ", " yeowffzhoesoiieieeaibiaiioieigpeeoihkfior eai it ", " eanzgeodgjiicapzpupvrmeubmsiaeocitapac aizi ", "uibmgsfulqjanoeola evehoipp yu exxbff ", "odisueta wluqshpn ocknooeby i he ", " biumalexllzvpocbuosjdhzuay iiwombimr iisq hnxoo ", " gvzihquahicigfmjdqaqajzguobvbeauqoigvu uxkkajap ", " ueooujtqjuszvodmiaeesi fgeoleeailg ypo e ", "geactiy iosepauvizaaoovirjuceuvwieogbocxfri i ob ", " cqahjcuomaalltmeuovoroosopoegoegmt euoviroih ", " upuoavlavxaepxeetzkdojahnezqnneiai upoggc ey ", "o wiaovvceshoinnhuflkbsabosionlkelvjeuaury ", " ezbzxitaqocqroeeqgxaoos apsdadljfaui u coua i "}));
		Assert.assertEquals("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX", poetry.rhymeScheme(new String[]{"a", "ab", "ac", "ad", "ae", "af", "ag", "ah", "ai", "aj", "ak", "al", "am", "an", "ao", "ap", "aq", "ar", "as", "at", "au", "av", "aw", "ax", "ay", "az", "ea", "eb", "ec", "ed", "ee", "ef", "eg", "eh", "ei", "ej", "ek", "el", "em", "en", "eo", "ep", "eq", "er", "es", "et", "eu", "ev", "ew", "ex"}));
		Assert.assertEquals("abcdefghibjkblmnopqrstcuvwxyzABCbDEFG", poetry.rhymeScheme(new String[]{"This poem has uppercase letters", "In its rhyme scheme", "Alpha", "Blaster", "Cat", "Desert", "Elephant", "Frog", "Gulch", "Horse", "Ireland", "Jam", "Krispy Kreme", "Loofah", "Moo", "Narf", "Old", "Pink", "Quash", "Rainbow", "Star", "Tour", "Uvula", "Very", "Will", "Xmas", "Young", "Zed", "deception", "comic", "grout", "oval", "cable", "rob", "steal", "steel", "weak"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"your", "byour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"spying", "sing"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{" solution went sour", "too bad yyour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"axy", "exy"}));
		Assert.assertEquals("ababcddd", poetry.rhymeScheme(new String[]{"saaaaab", "saaab", "gaaaaab", "gaaab", "a", "your", "sour", "our"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"exy", "axy"}));
		Assert.assertEquals("abcdefghibjkblmnopqrstcuvwxyzABCbDEFG", poetry.rhymeScheme(new String[]{"This poem has uppercase letters", "In its rhyme scheme", "Alpha", "Blaster", "Cat", "Desert", "Elephant", "Frog", "Gulch", "Horse", "Ireland", "Jam", "Krispy Kreme", "Loofah", "Moo", "Narf", "Old", "Pink", "Quash", "Rainbow", "Star", "Tour", "Uvula", "Very", "Will", "Xmas", "Young", "Zed", "deception", "comic", "grout", "oval", "cable", "rob", "steal", "steel", "weak"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"your", "byour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"spying", "sing"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{" solution went sour", "too bad yyour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"axy", "exy"}));
		Assert.assertEquals("ababcddd", poetry.rhymeScheme(new String[]{"saaaaab", "saaab", "gaaaaab", "gaaab", "a", "your", "sour", "our"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"exy", "axy"}));
		Assert.assertEquals("abcdefghibjkblmnopqrstcuvwxyzABCbDEFG", poetry.rhymeScheme(new String[]{"This poem has uppercase letters", "In its rhyme scheme", "Alpha", "Blaster", "Cat", "Desert", "Elephant", "Frog", "Gulch", "Horse", "Ireland", "Jam", "Krispy Kreme", "Loofah", "Moo", "Narf", "Old", "Pink", "Quash", "Rainbow", "Star", "Tour", "Uvula", "Very", "Will", "Xmas", "Young", "Zed", "deception", "comic", "grout", "oval", "cable", "rob", "steal", "steel", "weak"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"your", "byour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"spying", "sing"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{" solution went sour", "too bad yyour"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"axy", "exy"}));
		Assert.assertEquals("ababcddd", poetry.rhymeScheme(new String[]{"saaaaab", "saaab", "gaaaaab", "gaaab", "a", "your", "sour", "our"}));
		Assert.assertEquals("ab", poetry.rhymeScheme(new String[]{"exy", "axy"}));
	    Assert.assertEquals(" ", poetry.rhymeScheme(new String[] {"", "", "", ""}));

	}

	
	
}
