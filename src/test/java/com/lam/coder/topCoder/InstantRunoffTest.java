package com.lam.coder.topCoder;

import junit.framework.Assert;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import com.lam.coder.topCoder.InstantRunoff;

public class InstantRunoffTest {
	InstantRunoff run;
	
	@Before
	public void setUp() throws Exception {
		run = new InstantRunoff();
	}

	@After
	public void tearDown() throws Exception {
		run = null;
	}

	@Test
	public void testOutcome() {
		Assert.assertEquals("U", run.outcome("RYMGU", new String[] {"URYMG"}));
		Assert.assertEquals("B", run.outcome("DCBA", new String[] {"ACBD", "ACBD", "ACBD", "BCAD", "BCAD", "DBCA", "CBDA"}));
		Assert.assertEquals("A", run.outcome("AB", new String[] {"AB", "AB","AB","AB","AB"}));
		Assert.assertEquals("B", run.outcome("ABC", new String[] {"ACB", "BCA", "ACB", "BCA", "CBA"}));
		Assert.assertEquals("", run.outcome("ACB", new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CBA", "CAB"}));
		Assert.assertEquals("A", run.outcome("CAB", new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CAB", "CAB"}));
		Assert.assertEquals("Z", run.outcome("Z", new String[] {"Z"}));
	}
	
	@Test
	public void outcomeSystemTest() {
		Assert.assertEquals("B", run.outcome("ABC", new String[] {"ACB", "BCA", "ACB", "BCA", "CBA"}));
		Assert.assertEquals("B", run.outcome("DCBA", new String[] {"ACBD", "ACBD", "ACBD", "BCAD", "BCAD", "DBCA", "CBDA"}));
		Assert.assertEquals("", run.outcome("ACB", new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CBA", "CAB"}));
		Assert.assertEquals("A", run.outcome("CAB", new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CAB", "CAB"}));
		Assert.assertEquals("Z", run.outcome("Z", new String[] {"Z"}));
		Assert.assertEquals("Z", run.outcome("JRXLFNYGZA", new String[] {"JFYZARNXGL", "AXZNGFLJRY", "NGJZXFYARL", "LFZNRXYGAJ", "YGZXRFANJL", "NLFXJGARZY", "XJFAZLYGNR", "ZYJLAGFNRX", "LARGJZXFNY", "JLRZGNXAYF", "RAZFXLNYJG", "AZGNYXFLRJ", "JLZGXRYNFA", "NFJGRLZAYX", "RJLZFGAYXN", "FALXZGJNYR", "JGLAFRYZNX", "AGJXFNYLRZ", "ZAJXRGNLFY", "XJYGNAZFRL", "RZLJNGYAXF", "ZRNAYFLJXG", "GZNXYFRJLA", "YXLJAGZFRN", "NJXYRAGFZL", "YLAZFXJNGR", "ZYRJFXGNAL", "RYNGJAFXLZ", "LFAGZYJNXR", "RLZAYXGFNJ", "XZAFLNJRGY", "YJLGAFRZXN", "JNARFGZXYL", "NFGRALZJYX", "ZYXRJFAGLN", "RLJGXYNZFA", "XFNJAZGLYR", "JZXGLFNYAR", "FXRZJGLANY", "JGAFRZYNLX", "NZYLARXGJF", "ZRYJLGAFXN", "LGAXYFZNJR"}));
		Assert.assertEquals("", run.outcome("AHWMRNQDPI", new String[] {"WQAMIHPDNR", "INMDRAPQHW", "HRPINAMQWD", "MIRPDQNAWH", "IQNWRDHAPM", "WMPNDHRAIQ", "ANIHRPQWMD", "WHRAMPNIQD", "NDPQIAMHRW", "DIWAQPNMHR", "QAIMWNPRDH", "QWPMHDIRAN", "QANHPWIRDM", "DMPHAWRINQ", "IHRAPNWDMQ", "RDQANPHMIW", "RWAQNMHIDP", "NPAMQWRDHI", "HPDMWRNIQA", "AHRQMDNWIP", "PWQIMHNDAR", "HIPQADMWRN", "IQAPDNHMWR", "RQPMNDWIHA", "QIPNDRHAWM", "PDRAIWQMHN", "DIANQHPWMR", "DWAQNHIMRP", "HDPAIWNRMQ", "RQADIMNWPH", "DRNWHIMQAP", "WIMDHNAQPR", "QPIHNWARDM", "IWPNDRMAHQ", "NDAPWRQIHM", "MRPNHWQDIA", "QDPWHRINAM", "NMRWADIHPQ", "WARIPMQDNH", "PQAMIDRNHW", "MIHDAPWRNQ", "AMHPDNWIQR", "HIPRWMNQAD", "IPDNQWRMHA", "AMPDWHQNRI", "NRADHMPIQW", "HAMPRDIQWN", "RIMWPDANQH", "ADMIRHQPNW", "IDAWRNQMHP"}));
		Assert.assertEquals("W", run.outcome("W", new String[] {"W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"}));
		Assert.assertEquals("Z", run.outcome("Z", new String[] {"Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z", "Z"}));
		Assert.assertEquals("P", run.outcome("UPJFG", new String[] {"PFGUJ", "JFGPU", "GFPUJ", "GFPUJ", "PGJUF", "FJUPG", "FJPUG", "UPJGF", "PJGUF", "FPGJU", "UFGPJ", "UJFPG", "JUFPG", "GUPFJ", "UJGPF", "PUGFJ", "JGUPF", "UFGJP", "FJGPU", "GFPJU", "FGUJP", "PJFGU", "GPJFU", "JPGUF", "PJGUF", "JUPFG", "UPJFG", "FJUGP", "FPGUJ", "PJUFG", "PFUJG", "GFJPU", "UPJFG", "PUJGF", "PGFUJ", "UPFGJ", "FJGUP", "UFPGJ", "FUPJG", "JPFGU", "GJFPU", "UPGFJ", "UFJGP", "GFUJP", "GFPUJ"}));
		Assert.assertEquals("Z", run.outcome("FZG", new String[] {"GFZ", "FZG", "ZGF", "GZF", "FZG", "GFZ", "ZGF", "ZGF", "ZFG", "ZFG", "GFZ", "FZG", "GFZ", "GZF", "ZFG", "FZG", "ZFG", "ZFG"}));
		Assert.assertEquals("", run.outcome("EACFGHJUX", new String[] {"XFHUGECAJ", "FAJUEHCXG", "CXUEJFAHG", "XAUGHCJFE", "AJGXEFHCU", "HGEUACFXJ", "GEJHFXUAC", "UJHACFEGX", "EFAHGXCUJ", "XHFJAECGU", "FHGXUCEAJ", "JFAUCXEGH", "EHGAJXCUF", "AHFUXEJGC", "JFXCGAEUH", "JGCHAXFEU", "GJUXAECHF", "UFHCGJEAX", "GJFCUAEXH", "FCHXAJUEG", "CUXAFHEGJ", "XEAGCJFHU", "FACUJHGEX", "CXGEUHJAF", "AGXUFHCJE", "GFXHJEUAC", "HUAJFXCGE", "FEAXUJGCH", "GHECJUAXF", "GAXEHUCJF", "JUAFXEHCG", "UGHJFXEAC", "UAEGJFXHC", "XGHAJCUEF", "AXJECGUFH", "JACXEGUFH", "JECUHFGXA", "HCUXGJEFA"}));
		Assert.assertEquals("B", run.outcome("LEB", new String[] {"LBE", "ELB", "LBE", "LBE", "BLE", "BEL", "BEL", "BEL", "BEL", "BLE", "EBL", "EBL", "LBE", "BLE", "LEB", "EBL", "ELB", "ELB", "ELB", "LEB", "LBE", "ELB", "EBL", "BEL", "EBL", "BLE", "BEL", "BLE", "ELB", "LBE", "EBL", "LEB", "EBL", "EBL", "BLE", "LBE", "BEL", "BEL", "ELB", "BLE", "EBL", "LBE", "LEB", "EBL"}));
		Assert.assertEquals("M", run.outcome("EHQDCMXGN", new String[] {"XMDQHECNG", "DMGECQNHX", "NXHQEDMGC", "NEXCHMDGQ", "XHMDCENQG", "XCDGEQMNH", "CXQGHEDNM", "NDECQGMXH", "GNXEMDQCH", "HCNMEGDXQ", "NCHMGQXED", "GMHNCDEXQ", "CDMENHXGQ", "MXCHDNGQE", "QCDEXGMHN", "QNCHGXEDM", "MXCNHGEDQ", "NMQHDGCEX", "NCQHGDMEX", "MNHDXQGEC", "HGQEDCMNX", "MHEGNDCXQ", "MENHCXDQG", "HMXGEQCDN", "EXQMDCGNH", "GQHMCENDX", "EHDCGQNXM", "QHMDCGNEX", "XGMHQCDEN", "GMXCNDEQH", "QCMNXGHED", "NDMEGCQHX", "DHQMEGCNX", "MHNEXQCGD", "HDNCXGQME", "QEXGNCMDH", "EHCNDGMXQ", "MHCGEDXNQ", "HXGQENMCD", "MGXEDCNQH", "CQGENHDMX", "GMQECNHDX", "XDNQMGCEH"}));
		Assert.assertEquals("I", run.outcome("RDMJNIG", new String[] {"IRGJDNM"}));
		Assert.assertEquals("", run.outcome("PSNJTEHOWC", new String[] {"EJCNTSHOWP", "SJWNTHECOP", "HSJEWCNTPO", "ETJHSWPOCN", "HPEJTSWNCO", "JCNWOTHSPE", "NHSJCTOPWE", "ENWPTCHJSO", "JESOHCTNWP", "EHJNSOWTPC", "NWJCOEHTPS", "ONPWSHCEJT", "HONCSJPWTE", "JPEOTSNWCH", "NOCTEPSWHJ", "TCHOENSJWP"}));
		Assert.assertEquals("U", run.outcome("UPN", new String[] {"NUP", "UPN", "UNP", "PUN", "UPN", "NUP", "UPN", "UNP", "UNP"}));
		Assert.assertEquals("M", run.outcome("MLGV", new String[] {"LMVG", "GMVL", "VGML", "LMGV", "MVLG", "LVMG", "MLGV", "VGLM", "MGVL", "MGVL", "MLGV", "GLVM", "VMGL", "GMVL", "VMGL", "VMLG", "VLMG", "GMVL", "VMGL", "MGLV", "MLGV", "LMVG", "GMLV", "MLGV", "VMLG"}));
		Assert.assertEquals("A", run.outcome("OA", new String[] {"OA", "OA", "AO", "OA", "AO", "AO", "AO", "AO", "OA", "AO", "AO", "AO", "OA", "AO", "OA", "AO", "AO", "OA", "OA", "OA", "AO", "AO", "OA", "AO", "OA", "AO", "OA", "AO", "OA", "OA", "OA", "AO", "AO", "OA", "AO", "OA", "OA", "AO", "AO", "OA", "AO"}));
		Assert.assertEquals("S", run.outcome("SZ", new String[] {"SZ", "SZ", "ZS", "ZS", "ZS", "SZ", "ZS", "ZS", "SZ", "SZ", "ZS", "ZS", "SZ", "SZ", "ZS", "SZ", "SZ", "ZS", "SZ", "ZS", "ZS", "SZ", "SZ", "SZ", "ZS", "ZS", "SZ", "ZS", "ZS", "ZS", "SZ", "ZS", "SZ", "SZ", "SZ", "ZS", "SZ", "SZ", "SZ", "SZ", "SZ", "SZ", "SZ", "ZS", "SZ", "ZS", "SZ"}));
		Assert.assertEquals("U", run.outcome("RYMGU", new String[] {"URYMG"}));
		Assert.assertEquals("D", run.outcome("D", new String[] {"D", "D", "D", "D", "D"}));
		Assert.assertEquals("Q", run.outcome("CQOGRH", new String[] {"HQOGRC", "GRQCOH", "CGROHQ", "CROHGQ", "ROQHGC", "RQHCGO", "CQHRGO", "QRHGOC", "QGRCHO", "QOHGRC", "CORQGH", "CHQORG", "GOQHRC"}));
		Assert.assertEquals("T", run.outcome("OUT", new String[] {"TUO"}));
		Assert.assertEquals("D", run.outcome("NGDBTLFE", new String[] {"TNFLEBGD", "DNFGBELT", "GENBTFDL", "FNDLGBET", "GLEFNDTB", "FNLTGDEB", "GELNDTFB", "NFBTDLEG", "DNLGBETF", "BFGNDELT", "FDLBNGTE", "TNBDFELG", "TNDLGEFB", "GLDTNBFE", "DTBFELNG", "LDNFTBGE", "LDTNEBGF", "GDFTBELN", "TDGEFBLN", "DTBENGLF", "BFDGTENL", "LBEGDTFN", "EDLGBNFT", "GLNEFBTD", "GLBETDNF", "TEFGBLDN", "DEFNTBGL", "LTDBGFNE", "GFBLTEDN", "EFTBGDLN", "FTBELDGN", "ENDTBGFL", "FTENLGDB", "GNDLFBTE", "NEGTDLBF", "LDEBFGTN", "ETGLBDNF", "DEBTFGLN", "NDTFBLEG", "NBTGLEFD"}));
		Assert.assertEquals("L", run.outcome("WLN", new String[] {"LWN", "NWL", "NWL", "WNL", "NLW", "WNL", "WLN", "WLN", "LWN", "LWN", "LNW", "LWN", "NWL", "WNL", "NWL", "LWN", "NWL", "LNW", "WLN", "NLW", "NWL", "LNW", "NLW", "LNW", "LWN", "LWN", "WNL", "LWN", "LWN", "WNL", "WNL", "WLN", "NLW", "LNW", "LNW", "LNW", "WNL", "NWL", "NWL", "WNL", "LWN", "WLN", "LNW", "WNL", "NLW", "LNW", "LNW"}));
		Assert.assertEquals("F", run.outcome("CF", new String[] {"CF", "CF", "FC", "CF", "FC", "CF", "FC", "CF", "CF", "CF", "CF", "FC", "FC", "CF", "FC", "FC", "FC", "FC", "FC", "FC", "FC", "FC", "FC", "CF", "FC", "FC", "FC", "FC"}));
		Assert.assertEquals("L", run.outcome("YWXADILU", new String[] {"YXIWULDA", "UIYDWALX", "LWXIDAYU", "LDAXUWYI", "AUIWYDXL", "YLUWDXAI", "IAUYWXLD", "IXAYWDUL", "IXULDYWA", "LAXDYWUI", "WLYXIADU", "WDLAYXIU", "IWAYDXLU", "XAUIYWLD", "IXWLYUDA", "IUDLYAWX", "AWUXLYDI", "UXIDLAYW", "WIAXDUYL", "XWLDIYUA", "WDAUYXLI", "ULADWIXY", "LUYWAIDX", "DALIWYXU", "LAIUDXYW", "WULDYAIX", "ULWDIXAY", "LXUIAYDW", "XAULWYID", "DIYXLUAW", "DYXIUWLA"}));
		Assert.assertEquals("C", run.outcome("MCR", new String[] {"MCR", "CRM", "MRC", "CRM", "RCM", "MRC", "CMR", "CRM", "CRM", "CMR", "RMC", "RMC", "MRC", "MRC", "CMR", "CRM", "CMR", "RCM", "RMC", "MRC", "RMC", "MRC", "RCM", "CMR", "CMR", "MCR", "CMR", "RCM"}));
		Assert.assertEquals("R", run.outcome("STJZGCDR", new String[] {"CTRZGSDJ", "ZDCSRTGJ", "TJRZGSCD", "RDTZGSJC", "ZJCGDTRS", "CRSDZJGT", "RJZSGDCT", "ZRTSCJGD", "ZTJCDSGR", "TRCZJGSD", "CZRJGSDT", "SGRJTCDZ", "CGSJRDZT", "DJZGCTSR", "ZTGDCSRJ"}));
		Assert.assertEquals("I", run.outcome("CNVKQSI", new String[] {"INKVQSC"}));
		Assert.assertEquals("E", run.outcome("PEVNUI", new String[] {"NEVPIU", "NVIUEP", "ENPIVU", "PNVUEI", "EIVNUP", "EIPNUV", "EIVNPU", "PNUIEV", "NVPIEU", "UVIENP", "EUNPIV", "ENIUPV", "IENUPV", "ENVIUP", "UNVIEP"}));
		Assert.assertEquals("P", run.outcome("IMCP", new String[] {"MICP", "CPMI", "PMCI", "PMCI", "CIMP", "PMIC", "CPMI", "MPIC", "CMIP", "CIPM", "IPMC", "IMCP", "PMCI", "MIPC", "MPIC", "PCMI", "ICPM", "MIPC", "IMCP", "ICPM", "PCIM", "CPMI", "ICPM", "IMCP", "PMCI", "CMPI", "PMIC", "MICP", "CMIP", "MCIP", "CMPI", "MPCI", "MICP", "CPIM", "PMCI", "PMCI", "CPMI", "ICMP", "PCIM", "ICMP", "IPMC", "IMCP", "PMIC"}));
		Assert.assertEquals("V", run.outcome("LZEV", new String[] {"VLZE", "ZLEV", "EVLZ", "VLEZ", "ELVZ", "LVEZ", "VLEZ", "VZEL", "VEZL", "VZEL", "LZVE", "ELZV", "ZEVL", "ELVZ", "EZVL", "ZELV", "ZLVE", "LZVE", "ELVZ", "EZVL", "EVZL", "LZVE", "EZVL", "EVLZ", "ZELV", "VZLE", "VZLE", "ZELV", "ZLEV", "LVEZ", "VZEL", "VZLE", "VZLE"}));
		Assert.assertEquals("K", run.outcome("REDVKQ", new String[] {"VQREDK", "KQDERV", "KEDRVQ", "VDKREQ", "QRKEVD", "VKDERQ", "VKEQDR", "KVRQDE", "QRKVED", "KDEQRV", "EQKRDV"}));
		Assert.assertEquals("Y", run.outcome("PICWLAKY", new String[] {"LWACPKIY", "WAYLCIKP", "CIYWALKP", "KYWAIPLC", "KPLYWACI", "YALWCIKP", "KPILCYWA", "LYCAIWKP", "AWPICKYL", "AICYWKLP", "YKAPICWL", "CIYPKWLA", "CWPIALKY", "YAILPCWK", "ICYPWLKA", "YKPAIWCL", "ICLYPAWK", "AYCPWLIK", "LAYKICWP"}));
		Assert.assertEquals("F", run.outcome("YWEHVGXF", new String[] {"FWYGXHVE", "EGWXHVFY", "EFGYWXVH", "EYHVWXGF", "GFVXHWYE", "FEHWVXGY", "XFVGHWYE", "XFYHVEWG", "HYXVFEWG", "YHFWGXEV", "HYXEVGFW", "XFEWYHGV", "VGEXFHYW", "FEGYXWVH", "GHFXWEVY", "GXHVWEFY", "VYGFXHEW", "GFVYWHEX", "HGFEVWYX", "VHWFGXEY", "VFEYGWXH", "YXWGEFHV", "XVFYHGWE", "FWGXVYHE", "XFYWVHGE", "FYXWGVHE", "YHXWVFGE", "XVYFHGEW", "GFHWVXYE", "HWXEYFVG", "HXFVYEGW", "VEWFXHGY", "HXWYVFEG", "XYGFEWHV", "YHWEXVFG", "WGEYXVHF", "GHEWFXYV", "GHWXFEYV", "YXGWHVFE", "WYFXHVEG", "EFWGVXHY", "YEFWVGHX"}));
		Assert.assertEquals("T", run.outcome("JTIMZCU", new String[] {"IJZMCUT", "JCZITUM", "TMUJIZC", "TCJUZMI", "ZMJTCIU", "ITCMUJZ", "IMUZJTC", "UTCZJMI", "TUCJZIM", "MZICTJU", "TJUZMCI", "ZCIJMTU", "JCZTUIM", "UMTICZJ", "MICJUTZ", "IMJZUTC", "ICJZMTU", "IMUZTJC", "MUITZCJ", "JMZTCIU", "JUTZMCI", "IJMTZUC", "TUZCIMJ", "TCZIMJU", "MUICZJT", "CJMTZUI", "JTMCZUI", "UICJTMZ", "CZMUTJI", "JMUTIZC", "TUIJZCM", "CUMTJIZ", "UIMZTJC", "TJIUCZM", "JUZTICM", "ZTMUJCI", "ZUITMCJ", "IJUTZCM", "JTMZICU", "MZJITCU"}));
		Assert.assertEquals("Y", run.outcome("VIOYKQRCMJ", new String[] {"KRJYICMVQO", "YVIOCMJQKR", "RJCIOQVYKM", "IOCQVRMJKY", "VOCMKQJYIR", "MYVICKROQJ", "ROYVKIJCMQ", "OYRICMVJKQ", "IJRCYOVQMK", "KCYJVRQOMI", "KMRYIOJQCV", "QMYOJIVRKC", "JQMYVKRCOI", "CQIYVRKMJO", "YVOJKQMICR", "CIVQKYRJMO", "ROYKCQVIMJ", "RIQOJCYMKV"}));
		Assert.assertEquals("I", run.outcome("GPIFBA", new String[] {"PIFAGB", "GIBFPA", "FIGPAB", "BIGPAF", "FIAGPB", "IFAGBP", "GABIFP", "IPGFAB", "GAPFBI", "FGPAIB", "AIFBPG", "BGFAIP", "GBPFAI", "GFIBAP", "IFBAPG", "BAIGFP", "BPGIAF", "GIFBPA", "PIBFAG", "BPFIGA", "ABIPGF", "FPBGAI", "PBFGIA", "IFBAGP", "GBFIAP", "FPAGBI", "GAPBIF", "BIPAFG", "BIGAPF", "APIFGB", "FGIPAB", "IABGPF", "AFIBGP", "IFBAPG", "BPGFIA", "AIGBFP", "BAPGFI", "IBAFPG", "PFAIBG", "BGFIPA", "BIFPAG", "BPFIGA", "IFPBAG", "FIBGPA", "IPFGAB", "FBPAIG"}));
		Assert.assertEquals("O", run.outcome("HOBN", new String[] {"BONH", "NHBO", "NOBH", "NBHO", "NOBH", "NOHB", "HOBN", "ONBH", "NBHO", "BOHN", "HNOB", "ONHB", "NOBH", "HBNO", "ONHB", "HNOB", "BONH", "NHBO", "HOBN", "ONHB", "OHNB", "OHBN", "OHNB", "BONH", "BNOH"}));
		Assert.assertEquals("U", run.outcome("SVHEUPAR", new String[] {"UVRASEPH", "APSUREHV", "RSHVEAUP", "VUSERAHP", "AUPHSEVR", "UVHRSEAP", "EUAVHPSR", "AUSEPVHR", "UVSPRAEH", "EAUHSRVP", "REPUHSAV", "HAESRPVU", "VEUPSARH", "AUPSEVHR", "UPAHEVRS", "PEUSRHAV", "HPRUASEV", "AREPSHUV", "PEHASVUR", "HUVESPRA", "VSRPEUAH", "ESVPUHAR", "HEURSPVA", "EHSRVPAU", "RESAHUVP", "PUVSRHEA", "URPAEVHS", "VPASUERH", "EUPHRASV", "VRSAUPHE", "UPSVRAHE", "RSAUHVPE", "PRUVHASE", "SHUAREVP", "UVAPRSHE"}));
		Assert.assertEquals("V", run.outcome("V", new String[] {"V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V", "V"}));
		Assert.assertEquals("K", run.outcome("K", new String[] {"K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K", "K"}));
		Assert.assertEquals("B", run.outcome("IBZNXRODE", new String[] {"IZBODXENR", "RDBIEZNXO", "XEDRBIONZ", "RXIEDZBNO", "DERIBZNXO", "RBIXONEDZ", "XBDNIOZER", "DOIBREZNX", "OBNXIRDEZ", "ODIEBXNRZ", "ODXIRZBNE", "ROXDNIBEZ", "XBDONIZER", "BEIDORZXN", "EBZXOINDR", "BONZDXIER", "ZNBXRDEIO", "OZXNBDREI", "IDXONBZER", "BRZEIODNX", "EXRBODZIN", "BDZXNEIRO", "RIZEBDONX", "XRNBDIEOZ", "BDNRXZOIE", "ZEDNIOBRX", "BDXEZNRIO", "BEXIZONRD", "INBRXOZDE", "XBIOREZND", "ENORDXZBI", "DOREIXZBN", "ZEIRODBNX", "ZDBRENOIX", "IRNOBEZDX", "XZBNEDIRO", "ONIBRDZEX", "EZBIXODNR", "DIOXZEBRN", "NZEIORDBX", "ZIONDEXRB", "ZOXINERDB", "ZEOIXBDRN", "OBXDEZRIN", "EZXBNDIOR", "XZNORDIEB", "NIDBXOZRE"}));
		Assert.assertEquals("R", run.outcome("JRUGO", new String[] {"RJUOG", "UOGRJ", "OGURJ", "OURGJ", "OJRUG", "UJOGR", "OURJG", "OGUJR", "RGUOJ", "OURJG", "ROGUJ", "UJROG", "JROGU", "UOJGR", "ROJGU", "OGRUJ", "OGUJR", "ROUJG", "JUORG", "RGUJO", "OJRGU", "RGJOU", "GURJO", "GORUJ", "ORUJG", "RGOUJ", "UORGJ", "ORJUG", "ORJGU", "JROGU", "RGUJO", "JUROG", "UROGJ", "OUGRJ", "JUGOR", "RJOUG", "RJUGO", "RUOGJ", "RUGOJ", "RJGOU", "RGUOJ", "UJROG", "ORGJU", "RUJGO", "UOJGR", "RGUJO", "GJUOR"}));
		Assert.assertEquals("O", run.outcome("LPJRONXD", new String[] {"LXPODRNJ", "XODJRNLP", "JNLDROPX", "LDOJXNRP", "LRNDPJXO", "DNOPLJRX", "NOLXRPDJ", "PNODJLRX", "DLOJPRNX", "NLDJORXP", "OJRNDPXL", "JXNOPRLD", "OPNLDRXJ", "OPLXNDRJ", "DLXJPRON", "RNLPDXJO", "PJXRODLN", "XPDOLRJN", "DJRNOPXL", "PNOJRDXL", "LNRXJOPD", "XLPOJDNR", "LRJONDXP", "JPRLXODN", "JRDOLNPX", "OJLPDNXR", "PDRNXLOJ"}));
		Assert.assertEquals("S", run.outcome("RFYS", new String[] {"FRYS", "SFYR", "RFSY", "YRFS", "SRYF", "YSRF", "RFSY", "SFRY", "FSRY", "FSYR", "RSYF", "YSFR", "RYFS", "RFSY", "FRYS", "RYSF", "YSFR", "SRYF", "SYRF", "SRFY", "FRYS"}));
		Assert.assertEquals("", run.outcome("INRYU", new String[] {"UYRIN", "NIRYU", "YNUIR"}));
		Assert.assertEquals("M", run.outcome("YTBOEPMNF", new String[] {"OTYBNFEMP", "YFTOMENBP", "YOMPETFNB", "MYOEFTNBP", "OFBPYNMET", "NMFBOTYEP", "BOMPYNETF", "YPTFNOBME", "OEPNFYMBT", "TYNPFBEOM", "BFMNYTPOE", "TNFPEYMBO", "PMFETOYBN", "TYPBMEFON", "EMTFNBOYP", "TEPBOMNFY", "EPFBOTYMN", "MPNBYOFTE", "NEYBMTPOF", "YEBTMFOPN", "TONFMBPEY", "PFTBMYNOE", "YOBPNFETM", "TNEPMOYBF", "TBMFENPYO", "NOFPBETMY", "YTBFOMPEN", "OYMNEFBPT", "MEPYBNTOF", "NEPTFYOMB", "NEFMYBPOT", "YOEBNFTPM", "MBPNEYTFO", "YTMOBFNPE", "PMTBYFENO", "MFEOPBYTN", "EYFNOPTMB", "NETOFPBYM", "MENYFOPBT", "OTMNPEBYF", "EPNOFMTYB", "OYMBTNPEF", "YBNFTEPMO", "BMENFOYPT", "MFBENYOPT", "OTNMBFPYE"}));
		Assert.assertEquals("F", run.outcome("F", new String[] {"F", "F", "F", "F", "F", "F", "F", "F", "F"}));
		Assert.assertEquals("T", run.outcome("ZTC", new String[] {"ZTC", "TZC", "ZCT", "TCZ", "ZTC", "CTZ", "ZCT", "TZC", "ZTC", "CTZ", "TCZ", "CZT", "ZTC", "TZC", "TCZ", "ZTC", "ZTC", "TZC", "CTZ", "CTZ", "TCZ", "CTZ", "TCZ", "CZT", "CZT", "CTZ", "TZC", "ZCT", "ZTC", "ZCT"}));
		Assert.assertEquals("U", run.outcome("GDTZEUIVQJ", new String[] {"UGIVQZJTED"}));
		Assert.assertEquals("N", run.outcome("JCZAHMVIRN", new String[] {"NCJZVMIHRA", "CHMZNJIRAV", "NAZRJIHCVM", "ZMCJVINARH", "NZRJCVMAIH", "ARNJIZHVCM", "VMNIRJACZH", "ZCIHANMRJV", "VMJAHNZCIR", "CHVNMZRJAI", "VIRZANMJHC", "ZARCHVINMJ", "AIHCZVNRJM", "IJANRHZVMC", "JVHCANIZMR", "NACHZJIVMR", "NJICRZMVHA", "VMHCJIZNRA", "HJIRCMVANZ", "NJCZHRAIVM", "NCRZIHAVJM", "NAVJRCIZMH", "JHIVNAZRMC", "AHMNVJCRZI", "VNMZJIRAHC"}));
		Assert.assertEquals("M", run.outcome("TUGIABLM", new String[] {"GAUILMTB", "AIBULGTM", "LMAIBUTG", "UMLIBGAT", "LIATUBGM", "LIUBMTAG", "ATMUGIBL", "GBMTILAU", "MGUBITLA", "LMAUIBGT", "MBLAGUIT", "GTUBAIML", "MLUITAGB", "BIGAUMLT", "LIBMTGAU", "AMBTGLIU", "UBMTLIGA", "BUMLIAGT", "ATBIMLGU", "GIBUALMT", "IAGULMBT", "LMBGUIAT"}));
		Assert.assertEquals("N", run.outcome("NYDARM", new String[] {"NYRMDA", "DNMYRA", "DANYMR", "RNMAYD", "YRAMDN", "YMANDR", "YDNRAM", "NDMYRA", "RMANYD", "NAYMDR", "MRADYN", "DMANRY", "ANMDRY", "RMNDYA", "MARYDN", "DNMAYR", "NMRAYD", "DAYNRM", "NARYMD", "RADNMY", "YDAMRN", "NMARYD", "AYRMDN", "NDYAMR", "MDYARN", "DANYMR", "AMNDRY", "YRNDMA", "RADNMY", "AMRDNY", "YRDAMN", "MDYARN", "DRAYNM", "NDRMYA", "YADRNM", "RNDYMA", "NMYRDA", "DRYNMA", "NYAMRD", "MNYDAR", "DNYRMA", "MDRYAN", "MYNDAR", "RYNMAD", "NRADMY", "NAMYDR", "MAYRDN"}));
		Assert.assertEquals("H", run.outcome("HG", new String[] {"GH", "HG", "HG", "GH", "HG", "HG", "HG", "HG", "HG", "HG", "HG", "HG", "HG", "HG", "GH", "HG", "GH"}));
		Assert.assertEquals("H", run.outcome("HORKMEYW", new String[] {"OMKERWYH", "OMWRKEHY", "KHWYREMO", "WRHMYKOE", "RWHKOMEY", "EMOKRHYW", "YORHEMWK", "KHOWMRYE", "YRHOWKME", "WORYEKMH", "KORWYEHM", "KHMYEOWR", "OMYKEHRW", "KWOHMYRE", "YKMOWERH", "WKHYROEM", "MOKWHREY", "ERHMKOYW", "KWYRMOHE", "REMWKOYH", "MOKRYEHW", "HRMOWKEY", "HWMOYKER", "YHMORKWE", "OHKRWMYE", "KHWYMROE", "MYEHRWKO", "MYRHEOWK", "HKOMEWYR", "HWMEYKRO", "ERHWYOMK", "KMWOYEHR", "MKEYWORH", "WYEOHRMK", "REKHMYOW", "KREYMHWO", "WORYMKHE", "ORWHEYMK", "EOMHKRYW", "RWHOYEKM", "MHROYKWE", "HKORMEYW", "HWOMKYER", "OKEYWRMH"}));
		Assert.assertEquals("C", run.outcome("CNE", new String[] {"NEC", "ECN", "CEN", "ENC", "CEN", "ENC", "CEN", "CEN", "CEN", "NCE", "NEC", "CEN", "ENC", "ECN", "ENC", "CEN", "NCE"}));
		Assert.assertEquals("J", run.outcome("XDJGFWEN", new String[] {"GWXJNDFE", "JWENDGXF", "NFJEXDWG", "FGWXNJDE", "NJEXFWDG", "FJGXEWND", "WGENXFJD", "JXNGFDWE", "XNGWFJED", "GFNXEDWJ", "FWEGDNXJ", "JEXFNDWG", "DXWEFJNG", "XJWGENDF", "DWXNFJEG", "NFDJEXWG", "JXNWEDFG", "JGWNDXFE", "NXEGFWDJ", "GDFJXWNE", "NWGDEFXJ", "GDNWEJXF", "GXNJEDFW", "EJFNXDWG", "ENXJFWDG"}));
		Assert.assertEquals("N", run.outcome("NAGK", new String[] {"NGKA", "NAGK", "AGNK", "NGKA", "AKNG", "AGNK", "KANG", "KNGA", "GAKN", "GKNA", "AGKN", "KNGA", "ANKG", "ANKG", "NAGK", "NGAK", "NAKG", "ANGK", "NKGA", "KGAN", "NAKG", "KANG", "NKGA", "NAGK", "GNAK", "NKAG", "KGAN", "KNGA", "GAKN", "KNAG", "KNGA", "KAGN", "GKAN", "NAGK", "ANKG", "NGAK", "GNKA", "NKGA", "ANKG", "GAKN", "GNAK", "GAKN"}));
		Assert.assertEquals("H", run.outcome("RUSDQNHW", new String[] {"QWSURHDN", "WRHUNQSD", "NHWQUSRD", "DWUQHSRN", "SHNUWQRD", "DRSQUWNH", "DSHWRNUQ", "WDSQHUNR", "SNWRHDQU", "DHUQSWNR", "QUHNRWSD", "WHDUSNRQ", "HRDQSUWN", "RDQNUWHS", "RSQWDHNU", "RDQUNWHS", "UNDHWSRQ", "QRSWDUHN", "HDUWSQNR", "DHRQNWUS", "HDNRWQUS", "RDUQHSNW", "NRUDSHQW", "HNSDQRWU"}));
		Assert.assertEquals("E", run.outcome("KEJ", new String[] {"JEK", "KEJ", "KEJ", "EKJ", "EJK", "KJE", "JEK", "KEJ", "JEK", "KJE", "EJK", "EKJ"}));
		Assert.assertEquals("Z", run.outcome("QVSZON", new String[] {"NQOSVZ", "VZSONQ", "SZVQON", "ZNOQSV", "ZQNVOS", "NQSOVZ", "SVNZQO", "OZNVSQ", "QOSNZV", "SOVQZN", "ZNQSOV", "VZOQNS", "OVNSQZ", "VZNSQO", "VOQNSZ", "NOZSQV", "ZSOQVN", "ZSVQON", "QOSZNV", "OVSQNZ", "SOVZNQ", "NSQOZV", "QOSZNV", "ZNQOSV", "ZNVSOQ", "VQOSNZ", "SQVOZN", "OQSZVN", "QZONVS", "ZSQVON", "ONQSZV", "NZOVQS", "QVOSNZ", "ZVNOQS", "VSZOQN", "NSZOQV", "OZQSVN", "NQOSZV", "QOVNZS", "VZOSQN", "QZONSV", "ONVZQS", "ONSZQV", "SZQNVO", "SZVQON", "QVSNZO", "VZONSQ", "OSNVZQ", "SZONVQ"}));
		Assert.assertEquals("K", run.outcome("QJEKCX", new String[] {"KXEJQC", "XCKEJQ", "EQKJXC", "QXKEJC", "KQEXCJ", "JQKXEC", "EXJCQK", "KXQEJC", "XJKECQ"}));
		Assert.assertEquals("Y", run.outcome("QBJUXYTMP", new String[] {"XMUQBPTJY", "UJBXQYPMT", "UYBPJMXQT", "UQYXJTBMP", "QJTXBPMUY", "QPXTYUMBJ", "PBTUXYMJQ", "JBUYPTQXM", "BQMPTJYXU", "XMUBTPJYQ", "QYMJPUTBX", "TBMQYUJPX", "XPUTYJMBQ", "TXUMYBQPJ", "TUMPBJYQX", "TBXPUMQYJ", "YQPUTJXBM", "PUQYTJXBM", "JBQPMUXTY", "BJMXPTUYQ", "MYPXQBTUJ", "BUJYPXMQT", "YTJUBQPXM", "PTBYXJUMQ", "MQJXBUTYP", "XJYBPUMTQ", "YTQPUXJMB", "MBYJXTQUP", "QPXYUJBTM", "TXMJUYBQP", "BJMPXUYQT", "XPTJYQMUB", "BXTYMQUPJ", "YUTJPQBXM", "JYTUQPXMB", "XJPMYBQTU", "JYBUMPTXQ", "QUMJPYTBX", "BUMQJYXTP"}));
		Assert.assertEquals("E", run.outcome("EFRWCSMX", new String[] {"WXSCRMEF", "FMCEXRSW", "XSFREWCM", "WSCERMXF", "FMSXERWC", "EXFCRMWS", "EFXWSCRM", "SWMCREXF", "CESWXRFM", "EXMSRWFC", "RCEXSWFM", "WESRMFXC", "CWXSMFRE", "SRFCWMXE", "CRFWMESX", "WCFSXMER", "EFXCRSWM", "FMREWXCS", "CMWSXRFE", "SCWXMERF", "SEMXFCRW", "XWMRESCF", "SXEFRCWM", "CEWSRXMF", "MXECWFSR", "XESFCRMW", "FXESRCMW", "XMEWCRFS", "CEMFRXSW", "MSECFRWX", "RECFMSXW", "RCFMXSEW", "SRECFWMX", "FWMSXREC", "CFXSMWRE", "FMEWSCXR", "MFRESWCX", "SWMXFCER", "EFSWXCRM"}));
		Assert.assertEquals("O", run.outcome("LO", new String[] {"LO", "OL", "OL", "LO", "OL", "LO", "OL", "OL", "OL", "LO"}));
		Assert.assertEquals("Q", run.outcome("PQ", new String[] {"QP", "QP", "QP", "PQ", "PQ", "QP", "PQ", "QP", "QP", "QP", "PQ", "QP", "QP", "PQ", "PQ", "QP", "QP", "QP", "QP", "QP", "PQ", "PQ", "QP", "QP", "QP", "PQ", "PQ", "PQ", "PQ", "QP", "PQ", "PQ", "PQ", "PQ", "QP", "QP", "PQ", "QP", "QP", "QP"}));
		Assert.assertEquals("M", run.outcome("MRINPKSLZE", new String[] {"KZSIMRNPEL", "NEIZMPKSRL", "KEISRMZLNP", "MNRKLPSEZI", "SPIRMEKLZN", "KMSPLREINZ", "ILERNSZKPM", "MIZLKERSPN", "NPRMZKISEL", "KMIZLPNSER", "SERNILKPZM", "LRNSZPEIMK", "LZPSEKNMIR", "ENMPIZLSRK", "SIZRLENMKP", "MLRINKEPZS", "PLEZSRMINK", "SMPLREIZNK", "RKEMZNSLIP", "MRKZNIPSEL", "MSPNKZRELI", "ESRKINPLMZ", "ISRPNZLKME", "PKNMIRSZLE", "PLMRNZIEKS", "IMRNPSELZK", "IRLNPMKESZ", "NLKMRZPSIE", "MZLNRPIKSE", "IPRMKZLNES", "PLMZSKNEIR", "EPNSKRMLIZ", "NMEZKSIRLP", "LISEMPNZRK", "ZMPNELKISR", "SLMZNKRIPE", "IKNMRLESZP", "ZMIKRLSEPN", "ZIMKSERPLN", "RLZNEMKISP"}));
		Assert.assertEquals("A", run.outcome("A", new String[] {"A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A"}));
		Assert.assertEquals("Z", run.outcome("ZGOLRWH", new String[] {"HZWORLG", "HZWROLG", "LWROHZG", "WOGLHZR", "GRZOLHW", "RLHWOGZ", "HLRZWOG", "WHZLROG", "LHWZGOR", "ZGWROLH", "HWGRLOZ", "ROLGHZW", "RLOZHWG", "GRHZWLO", "LRGWHOZ", "ZHOGRLW", "ZWRHOLG", "OZWHGRL", "WLGRZOH", "ZOHGRLW", "WOHZRGL", "LHZGROW", "LHOWGRZ", "GLZOWRH", "LHZGORW", "GZORLHW", "HZLGRWO", "ZLHGROW", "OLHZGWR", "WRZOHLG", "OLZGHRW", "ZRWHGOL", "GZRWLHO", "WGORZLH", "ZWGRLOH", "RHWZLOG", "WGROHZL", "LZRHGWO", "GHRWOZL", "RGHZLWO", "LRZWOHG", "LHRZGWO", "ZHLOGWR", "GHLWZOR"}));
		Assert.assertEquals("", run.outcome("RKXF", new String[] {"FRKX", "FXRK", "XFRK", "KXRF", "XKFR", "FKRX", "FRKX", "KXFR", "FRKX", "RKXF", "KFRX", "RKFX", "XKFR", "KFXR", "RKXF", "XKRF", "KFXR", "FRKX", "XRFK", "FRKX", "KRXF", "FXKR", "KFRX", "RFKX", "XFKR", "FKXR", "XFKR", "RKXF"}));
		Assert.assertEquals("N", run.outcome("N", new String[] {"N", "N", "N", "N"}));
		Assert.assertEquals("X", run.outcome("X", new String[] {"X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X"}));
		Assert.assertEquals("R", run.outcome("UNMRETG", new String[] {"RMTUEGN", "RUGEMNT", "MEUTRGN"}));
		Assert.assertEquals("", run.outcome("RKW", new String[] {"WRK", "KRW", "WRK", "WKR", "RWK", "RWK", "WRK", "WRK", "KRW", "KWR", "KRW", "RKW", "RWK", "WRK", "RKW", "RKW", "WKR", "WRK", "WRK", "RWK", "WKR", "WKR", "KWR", "KWR", "KRW", "KRW", "WRK", "RWK", "RKW", "WRK", "RKW", "RKW"}));
		Assert.assertEquals("V", run.outcome("EXBKIWMTV", new String[] {"EMWKBTVXI", "TWXBMIEVK", "TBVXIEKMW", "KWVETMXIB", "KMBIWTEXV", "IBVXMTWKE", "TWKBMIXVE", "WKXVMEITB", "BEXKVTIWM", "EVIWMTBXK", "BTEWKIVXM", "EKMWIBVTX", "MVEBKXTWI", "IXEMTBKWV", "VBWMTEKXI", "VEXIMWBKT", "TXVBKEWMI", "TBEMVIXWK", "VMWTIEXKB", "TXMIEKBWV", "EBXIMVKTW", "WTIEBKMVX", "ITXMVEBKW", "KXEMWBVTI", "WXMEKTBVI", "MIBXWKVET", "XVWBKTIME", "XVWBIKTEM"}));
		Assert.assertEquals("A", run.outcome("SAGVIZOJLD", new String[] {"JSLDVOAGZI", "OIJVZGSDLA", "JIZOSGLAVD", "JZOVASGDLI", "JIVGSLZOAD", "DSGLAJOVZI", "SZOGVLJDIA", "DJGISVOZLA", "AVSIJZLOGD", "VOASLZGDJI", "DGZJIVASOL", "LGAJISDVZO", "VSAJDIOZLG", "DOGJAISVZL", "DJLAVSIGOZ", "VAIJOZDGSL", "ILSDGVOAJZ", "DVLJIAOGZS", "IVALOJSDZG", "VILAODGJZS", "OGLIDJZASV", "OALISGZVDJ", "SIOADJZVLG", "JDZGVLASOI", "ADSJGLZOVI", "SJZVADLOGI", "SDALIZJOVG", "IVDASLGZJO", "VSZJALIDGO", "AZVGSDOJLI", "GLDOSZJVIA", "IJSAZLDGOV", "ASLVGOIZJD", "IZGSAVDOJL", "JIDLZGVAOS", "AOSLVGZJID", "LGZOIJDVAS", "ISJAOLVGZD", "ZODALVISGJ", "GALVZSOJDI", "OJZADIGSLV", "SOVLDJAZIG", "LSOGVZADIJ", "OGLAIDVJSZ", "JASVLZIDGO", "SGOZJLDVIA", "DAISLVJOGZ", "AVODIZSGJL"}));
		Assert.assertEquals("I", run.outcome("QIOB", new String[] {"OBIQ", "BIOQ", "QOBI", "QBOI", "IOBQ", "IOBQ", "QIOB", "BOQI", "QBOI", "OIBQ", "IOBQ", "IOQB", "IQOB", "IQBO", "OBQI", "BIQO", "OQIB", "IQOB", "QIOB", "BOQI", "BQIO", "IBOQ", "BQIO", "BQOI", "BIQO", "IOQB", "OIQB", "QBIO", "QBIO", "IBOQ", "BIOQ", "QIOB", "IQOB", "BIQO", "QOIB", "IOQB", "QIOB", "QOIB", "BIOQ", "IQBO", "IOQB", "BIQO"}));
		Assert.assertEquals("D", run.outcome("BZDUORX", new String[] {"ORXZUDB", "DXUROZB", "ZXRUDOB", "DXUOBZR", "OUBDXRZ", "UDBOXRZ", "DZROBXU", "DBUORXZ", "OXDURZB", "XZRODBU", "XDUBORZ", "ROUXZDB", "ZUDXBRO", "RXDBUZO", "OZUDXBR", "ZDUXBOR", "OBUDZRX", "DBORZUX"}));
		Assert.assertEquals("O", run.outcome("UOX", new String[] {"XOU", "XOU", "XUO", "XOU", "UOX", "OUX", "OXU", "XOU", "XOU", "XUO", "OUX", "OXU", "XUO", "XOU", "OXU", "UOX", "XUO", "XUO", "UOX", "UXO", "OXU", "OUX", "UOX", "XUO", "OXU", "OUX", "UOX", "XOU", "XUO", "UOX", "OUX", "UOX", "XUO", "OUX", "XOU", "UXO", "XOU", "XOU", "OUX", "OXU", "OXU"}));
		Assert.assertEquals("", run.outcome("OIVG", new String[] {"GIOV", "VGOI"}));
		Assert.assertEquals("W", run.outcome("WR", new String[] {"RW", "WR", "RW", "WR", "WR", "WR", "WR", "RW", "WR", "RW", "WR", "RW", "RW", "WR", "WR", "WR", "RW", "WR", "RW", "RW", "RW", "WR", "RW", "RW", "WR", "WR", "WR", "RW", "WR", "RW", "RW", "WR", "WR", "WR"}));
		Assert.assertEquals("D", run.outcome("ADQGPTJ", new String[] {"TAJGQDP", "AJQDPGT", "QAPJTDG", "ATJPGQD", "PGAJDTQ", "DTGPQAJ", "QGTJPDA", "AGPQJTD", "AQDTJGP", "TAPDQGJ", "QPTDGJA", "JPQDTAG", "PAQJDTG", "DGJQTPA", "DPQJGTA", "JGADQPT", "PJDTQAG", "GTQJPAD", "DTAGJQP", "DATJGPQ", "QDJPGAT", "JQPGDTA", "DTAPGJQ", "TQDPJGA", "JQDTAGP", "DJPATQG", "AQGTJPD", "ATPQDJG", "TPAGDQJ", "TGQPJDA", "GDTQJPA", "DPTGQAJ", "QJGADPT", "GTJPQAD", "DJTPAQG", "TAQDGJP", "TDGAQJP", "JAGQPDT", "AQJDPGT", "GJTPQDA", "GJPTQAD", "TQDGPJA", "ADJQPTG", "PADTJGQ", "DGQTJPA", "DGTPQJA", "QJPGTAD"}));
		Assert.assertEquals("", run.outcome("HFGKVDNYMZ", new String[] {"FZVHKGYMDN", "ZVDGKMFNHY", "ZGHNMVYFKD", "DNKHZYGFVM", "DZNMGHKFYV", "YMKVZGFHDN", "DGZYMKHNFV", "VGNFDHZKMY", "FNDMHYKGZV", "MNGFYZDKVH", "HMFKYZNDVG", "ZGFHKMYNVD", "FYNVGZDKHM", "NKDMHFVYGZ", "YDHZGVNFMK", "VKNHFZDYGM", "NKDYFVGZHM", "DZGVNKHMYF", "DFMKGVNHZY", "FZVMKHYNGD", "DHZYGFKVMN", "GHMFVDZNYK", "DKHMZYNFVG", "DZFGMHKVYN"}));
		Assert.assertEquals("B", run.outcome("BXZULEPW", new String[] {"UBWLXPEZ", "XLBWEUZP", "WBELPUZX", "PXWBLEZU", "EXBWPUZL", "LPXEZWBU", "EPUXWLZB", "BWUXLPEZ", "LUWZEBPX", "UBWLEXPZ", "ZPXEWLUB", "BPLZWXEU", "ULEXPZBW"}));
		Assert.assertEquals("", run.outcome("TRLZMIABG", new String[] {"LBZMAIGTR", "ITRLMZAGB", "RIBZTALGM", "LTGBIAZRM", "ZGTRIABLM", "LZMGTRAIB", "BRMILZTAG", "RLMBAGZIT", "RLIBZAGTM", "MIRBZTAGL", "ZGTLABMIR", "AIBLZGMTR", "BMGILZART", "AILTGRZBM"}));
		Assert.assertEquals("W", run.outcome("KCHLIEYWF", new String[] {"ELFCWHYKI", "HCWYEIKLF", "LWHECYFIK", "CEWHLYIFK", "LEYHCWIFK", "LWKYECHIF", "IWLCYFHKE", "WLECFKHIY", "WFYHICLKE", "EHYKFWCLI", "LWFIHCKEY", "EWLCKYIHF", "ICYLHKWEF", "WEFLHCKYI", "LYEKWIHCF", "HFEKIYLWC", "CYWHKLEFI", "FIKEHCWLY", "IYHKFWELC", "YHCLKEIWF", "CFWLKIHEY", "HKWCLIFYE", "IYFHKELWC", "CFYWIKEHL", "YFCLIHWKE", "WHCFKYEIL", "ELIYWHFKC", "YWEKHLIFC"}));
		Assert.assertEquals("A", run.outcome("WUIABKX", new String[] {"AIBXUWK", "XIABUWK", "UKAWXBI", "IBUKAWX", "ABXWKIU", "WXKIABU", "XAIUBKW", "WIUBKAX", "KWUIBAX", "AXKBIWU", "KIABUXW", "IBUXAKW", "UIXABKW", "AXKUBWI"}));
		Assert.assertEquals("F", run.outcome("F", new String[] {"F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F"}));
		Assert.assertEquals("K", run.outcome("ZJMCHXNK", new String[] {"ZHXJCNMK", "HNKMJZXC", "ZKCJNMXH", "JXKZHMNC", "HNKJCZXM", "MJZXNKHC", "KHZXJNCM", "KZCMHXNJ", "JCZMKXHN", "ZKHCXJNM", "HXNKCMJZ", "JZHKMNXC", "KNCZMXHJ", "JMXHKZCN", "KNCXHMJZ", "ZKCNHXMJ", "XHMZCKJN", "ZCMNXHKJ", "JHNXZCMK", "XHKJMNZC", "JKCHXNMZ", "CZXMKHJN", "NCJMZHXK", "MXNZCJHK", "CKHJMXNZ", "ZCMJNXHK", "NKXMHCZJ", "HJMXCNKZ", "XKJMNCZH", "HJKZXNCM", "MZJKXHNC", "KMXCZNHJ", "XNCKHJZM", "KHNMXCJZ", "ZNXCMKJH", "MCHJKNXZ", "NJXHZKCM", "HXZCNMKJ", "XKNHCMJZ", "KHZNMJXC", "XHNKCJMZ"}));
		Assert.assertEquals("T", run.outcome("TFAW", new String[] {"TAWF", "AWTF", "TFAW", "FTAW", "TFWA", "WTFA", "WAFT", "FTAW", "WTAF", "WFTA", "TWAF"}));
		Assert.assertEquals("H", run.outcome("HTUPK", new String[] {"HPTUK", "KUHTP", "HKUPT", "THUPK", "KPHUT", "PUTHK", "PUHTK", "PTUKH", "PHUKT", "UPTHK", "PUKHT", "PTUKH", "KHUPT", "HKUTP", "THUKP", "KHTUP", "UHKPT"}));
		Assert.assertEquals("L", run.outcome("HRIYNZEL", new String[] {"ZYLRIHNE", "ZRLIEYHN", "IHLYENRZ", "ZINRLHYE", "EIYNHRLZ", "LNYIRZEH", "YHINLEZR", "LHZIRNEY", "ZEYNHRIL", "HLYIRNEZ", "YHZIENRL", "HZRENYLI", "ZLNIHRYE", "EYZRNHLI", "LRHNYIEZ", "ELZIHYRN", "ENIHYRZL", "HENRIZLY", "IYLNHZER", "LZIRHENY", "LRENIHZY", "NHYRELZI", "YIENLRHZ", "YIZHRLEN", "ZIEYNRHL", "YHLENZIR", "ERZLNHYI", "ZNHIEYRL", "HYEINRZL", "YLHRENZI", "ZNHRELIY", "LHZINYRE", "NLHRIYEZ", "YLHZNEIR", "NERLIZYH", "IHLZNEYR", "LZRIHYNE", "ILZREHNY", "INYZLRHE", "ZLHNERIY"}));
		Assert.assertEquals("N", run.outcome("EBNQHUR", new String[] {"QHEUBRN", "RHBNEUQ", "UHNBREQ", "NBQRHUE", "QUENRBH", "HQRBEUN", "RBNQUEH", "UBHRENQ", "NQHBEUR", "NHEUQBR", "UBQRHEN", "UHRNQEB", "NREQHBU", "HNRUBEQ", "UENRBHQ", "URHBQNE", "REBHQNU", "RBQNEHU", "BHNEQUR", "HBUERQN", "QNEURHB", "NQHEURB", "RQNHUEB"}));
		Assert.assertEquals("Q", run.outcome("Q", new String[] {"Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q", "Q"}));
		Assert.assertEquals("H", run.outcome("ARH", new String[] {"HAR", "HRA", "HAR", "ARH", "AHR", "AHR", "HAR", "HAR", "ARH", "RHA", "AHR", "HRA", "RAH", "RHA", "HRA", "RHA", "ARH", "HRA", "AHR", "AHR", "HAR", "ARH", "AHR", "AHR", "HAR", "RAH", "HRA", "HRA", "RHA", "AHR", "ARH", "RAH", "HRA", "RAH", "RHA", "RHA", "RAH"}));
		Assert.assertEquals("V", run.outcome("OVPFKDNML", new String[] {"PDFMONVKL", "MNKFLVOPD", "NMVOFPKLD", "FLVDKOMPN", "LDVKFMONP", "NPVKFDOLM", "VKNOFLDMP", "OPNFLKVDM", "VLMDNFPOK", "DOVPNLKFM", "KONDMVPLF", "PVKMNFLDO", "DMOKNFVPL", "VPMNLDKFO", "VFPMLONKD", "KDNFMOLPV", "MPKDLFONV", "MVOLFPDKN", "OPVLNMDKF", "FNLVKOPMD"}));
		Assert.assertEquals("L", run.outcome("UCLZ", new String[] {"UCZL", "ZLCU", "LUCZ", "UZLC", "LCZU", "ULZC", "ZLUC", "LZUC", "LCUZ", "CUZL", "ZCLU", "LZCU", "ZUCL", "CZUL", "ZLUC", "LUZC", "CLZU", "UCLZ", "UZCL", "ULZC", "LZUC", "ZULC", "CZUL", "CUZL", "ZCLU", "ZUCL", "LUZC", "CLZU", "ZLCU", "UZCL", "UCLZ", "CLZU", "ULZC", "LUCZ", "LZCU", "ZLUC", "LCUZ"}));
		Assert.assertEquals("A", run.outcome("CAB", new String[] {"ACB", "BCA", "ACB", "BCA", "ACB", "BCA", "CAB", "CAB"}));
		Assert.assertEquals("", run.outcome("ABC", new String[] {"ABC", "BAC"}));
		Assert.assertEquals("B", run.outcome("DCBA", new String[] {"ACBD", "ACBD", "ACBD", "BCAD", "BCAD", "DBCA", "CBDA"}));
		Assert.assertEquals("A", run.outcome("AB", new String[] {"AB", "BA", "AB"}));
		Assert.assertEquals("", run.outcome("ABC", new String[] {"ABC", "ABC", "BAC", "BAC", "CAB", "CAB"}));
		Assert.assertEquals("", run.outcome("ABC", new String[] {"ACB", "BCA"}));
		Assert.assertEquals("", run.outcome("ABCD", new String[] {"ABCD", "CBAD", "BCDA"}));
	}
}
